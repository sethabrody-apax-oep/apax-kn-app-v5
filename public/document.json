{
  "openapi": "3.1.0",
  "info": {
    "title": "idloom.events",
    "version": "4.0",
    "description": "# üìò Event Management API Docs ‚Äì Integrate with idloom Easily\n\nThe **idloom.events API** allows external applications to securely access, create, and manage data across the event lifecycle ‚Äî from attendee registration to invoicing and webhook automation.\n\nAPI access is available for **Light** and higher subscription plans. For **Corporate** users managing multiple profiles, each integration is assigned a unique API key.\n\n---\n\n# üîß Capabilities\n\nThe API offers a wide range of endpoints grouped by core functions:\n\n## üîç Account & Profiles\n- **Get all profiles** ‚Äì Retrieve all profiles linked to your idloom account\n- **Test credentials** ‚Äì Validate your API credentials and view associated metadata\n\n## üìÖ Events\n- **Get events** ‚Äì Fetch all events (with filters for status, language, pagination)\n- **Create a new event** ‚Äì Programmatically create events\n- **Update an event** ‚Äì Update existing event details\n- **Get fields, categories, options, statuses** ‚Äì Retrieve all configured registration elements for an event\n\n## üë• Attendees\n- **Get attendees** ‚Äì List or retrieve individual attendees with pagination\n- **Create a new attendee** ‚Äì Register new attendees via API\n- **Create a new check-in** ‚Äì Log check-ins/check-outs for attendees\n- **Get attendee transactions** ‚Äì Fetch all transactions linked to a specific attendee\n- **Get last attendee** ‚Äì Retrieve a recent attendee registration (for testing or webhook preview)\n\n## üí¨ Notify Me\n- **Get last ‚ÄúNotify Me‚Äù contact** ‚Äì Retrieve the latest ‚Äúnotify me‚Äù form submissions for an event (used for webhook testing)\n\n## üíº Invoicing & Payments\n- **Get invoices** ‚Äì Retrieve invoice data across profiles\n- **Set invoice payment status** ‚Äì Update invoice records with payment information\n- **Get credit notes** ‚Äì Fetch issued credit notes (with pagination and filters)\n\n## üîÅ Webhooks\n- **Get all webhooks** ‚Äì List existing webhook subscriptions\n- **Create a new webhook** ‚Äì Register new webhooks for real-time notifications\n- **Delete a webhook** ‚Äì Unregister webhooks by ID, event, or subscription URL\n\n---\n\n# ‚öôÔ∏è Webhook vs API\n\nYou can choose between:\n- **Webhooks** ‚Äî For real-time, push-based notifications when events like registrations or \"notify me\" submissions occur\n- **REST API (GET/POST/PUT)** ‚Äî For pulling data on-demand or managing records directly\n\nWebhooks are especially useful for integrations with automation tools like Zapier.\n\n---\n\n# üö¶ Rate Limits\n\n- **60 requests per 60 seconds**\n- If exceeded, the API returns **HTTP 429 (Too Many Requests)**. You should implement retry logic to prevent data loss or disruption.\n\n---\n\n# üìú Disclaimer\n\nAll rights reserved. *idloom-events* is a trademark or registered trademark of idloom in the EU, US, and other countries. This documentation is confidential and intended for authorized idloom customers and technical teams only.\n"
  },
  "servers": [
    {
      "url": "https://idloom.events/api/v4"
    }
  ],
  "security": [
    {
      "http": []
    }
  ],
  "paths": {
    "/account/profiles": {
      "get": {
        "operationId": "account.getProfiles",
        "description": "This method returns a list of all profiles associated with the account.",
        "summary": "Get all profiles",
        "tags": [
          "Account"
        ],
        "responses": {
          "200": {
            "description": "Array of `Profile`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Profile"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/attendees": {
      "get": {
        "operationId": "attendees.getAttendees",
        "description": "This method returns the complete **list of attendees (or a single one) with selected categories and options for a given event with pagination**.<br>\nThanks to the <a href=\"https://www.idloom.com/en/resources/api-field-mapping\" target=\"_blank\" rel=\"noopener\">API field mapping feature</a>, you can define a subset of fields you want to receive, rename them and add hidden fields with fixed values.\n> idloom-events will only send the fields defined in your mapping settings. All other fields will be ignored. To return all fields and ignore the field mapping configuration, set \"ignore_fields_mapping\": 1.",
        "summary": "Get attendees",
        "tags": [
          "Attendees"
        ],
        "parameters": [
          {
            "name": "event_uid",
            "in": "query",
            "description": "UID of an event.<br>Required when `guest_uid` is not present.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "guest_uid",
            "in": "query",
            "description": "UID of an attendee.<br>Required when `event_uid` is not present.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Returns only attendees with this email address.<br>Must not be present when `guest_uid` is present.",
            "schema": {
              "type": "string",
              "format": "email",
              "maxLength": 255
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "description": "Returns only attendees updated since that date.<br>\n`Must be in ISO 8601 format`",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2022-10-25T16:10:00+02:00"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of attendees shown per page.",
            "schema": {
              "type": "integer",
              "default": 20,
              "minimum": 1,
              "maximum": 200
            }
          },
          {
            "name": "ignore_fields_mapping",
            "in": "query",
            "description": "Whether to ignore any configured fields mapping and return all fields.",
            "schema": {
              "type": "boolean",
              "default": 0
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Sort by",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "updated_at"
              ],
              "default": "created_at"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "Sort order",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated set of `Guest`\n\nPaginated set of `MappedGuest`",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Guest"
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": [
                                "integer",
                                "null"
                              ]
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "links": {
                              "type": "array",
                              "description": "Generated paginator links.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "label": {
                                    "type": "string"
                                  },
                                  "active": {
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "url",
                                  "label",
                                  "active"
                                ]
                              }
                            },
                            "path": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Base path for paginator generated URLs."
                            },
                            "per_page": {
                              "type": "integer",
                              "description": "Number of items shown per page."
                            },
                            "to": {
                              "type": [
                                "integer",
                                "null"
                              ],
                              "description": "Number of the last item in the slice."
                            },
                            "total": {
                              "type": "integer",
                              "description": "Total number of items being paginated."
                            }
                          },
                          "required": [
                            "current_page",
                            "from",
                            "last_page",
                            "links",
                            "path",
                            "per_page",
                            "to",
                            "total"
                          ]
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "first": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "last": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "prev": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "next": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "required": [
                            "first",
                            "last",
                            "prev",
                            "next"
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "links",
                        "meta"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/MappedGuest"
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "current_page": {
                              "type": "integer"
                            },
                            "from": {
                              "type": [
                                "integer",
                                "null"
                              ]
                            },
                            "last_page": {
                              "type": "integer"
                            },
                            "links": {
                              "type": "array",
                              "description": "Generated paginator links.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "label": {
                                    "type": "string"
                                  },
                                  "active": {
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "url",
                                  "label",
                                  "active"
                                ]
                              }
                            },
                            "path": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Base path for paginator generated URLs."
                            },
                            "per_page": {
                              "type": "integer",
                              "description": "Number of items shown per page."
                            },
                            "to": {
                              "type": [
                                "integer",
                                "null"
                              ],
                              "description": "Number of the last item in the slice."
                            },
                            "total": {
                              "type": "integer",
                              "description": "Total number of items being paginated."
                            }
                          },
                          "required": [
                            "current_page",
                            "from",
                            "last_page",
                            "links",
                            "path",
                            "per_page",
                            "to",
                            "total"
                          ]
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "first": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "last": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "prev": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "next": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "required": [
                            "first",
                            "last",
                            "prev",
                            "next"
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "links",
                        "meta"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "An error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error overview.",
                      "example": "Forbidden"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "post": {
        "operationId": "attendees.createAttendee",
        "description": "Create new attendee in your events using APIs.<br>\nYou first have to retrieve event details, like category and option ids, hotels... using the GET events method. You can then post your attendee using these values.<br>\nFree_fields must be posted in an object called \"data\".",
        "summary": "Create a new attendee",
        "tags": [
          "Attendees"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "event_uid": {
                    "type": "string",
                    "description": "UID of the event."
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email of the attendee.",
                    "maxLength": 255
                  },
                  "title": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Title of the attendee.",
                    "maxLength": 30
                  },
                  "firstname": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "First name of the attendee.",
                    "maxLength": 50
                  },
                  "lastname": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Last name of the attendee.",
                    "maxLength": 50
                  },
                  "job_title": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Job title of the attendee.",
                    "maxLength": 100
                  },
                  "phone": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Phone number of the attendee.",
                    "maxLength": 30
                  },
                  "mobile_phone": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Mobile phone number of the attendee.",
                    "maxLength": 30
                  },
                  "email_contact_confirmations": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "email",
                    "description": "Email which will receive confirmations.",
                    "maxLength": 255
                  },
                  "accompanying": {
                    "type": "boolean",
                    "description": "Whether the attendee has an accompanying person."
                  },
                  "accompanying_title": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Title of the accompanying person.",
                    "maxLength": 30
                  },
                  "accompanying_firstname": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "First name of the accompanying person.",
                    "maxLength": 50
                  },
                  "accompanying_lastname": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Last name of the accompanying person.",
                    "maxLength": 50
                  },
                  "accompanying_email": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "email",
                    "description": "Email of the accompanying person.",
                    "maxLength": 255
                  },
                  "accompanying_mobile_phone": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Mobile phone number of the accompanying person.",
                    "maxLength": 30
                  },
                  "cpy_name": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Company name.",
                    "maxLength": 200
                  },
                  "cpy_street": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Company street.",
                    "maxLength": 200
                  },
                  "cpy_street_number": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Company street number.",
                    "maxLength": 20
                  },
                  "cpy_street_box": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Company street box.",
                    "maxLength": 20
                  },
                  "cpy_zip_code": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Company ZIP code.",
                    "maxLength": 20
                  },
                  "cpy_city": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Company city.",
                    "maxLength": 100
                  },
                  "cpy_state": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Company state.",
                    "maxLength": 100
                  },
                  "cpy_country": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Company country code.\nUse ISO 3166-1 alpha-2 format.",
                    "maxLength": 2
                  },
                  "cpy_vat_number": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Company VAT number.",
                    "maxLength": 50
                  },
                  "cpy_vat_registered_in_eu": {
                    "type": "boolean",
                    "description": "Whether the company is VAT registered in the EU."
                  },
                  "has_invoicing_address": {
                    "type": "boolean",
                    "description": "Whether the attendee has a different invoicing address."
                  },
                  "inv_cpy_name": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Invoice company name.",
                    "maxLength": 200
                  },
                  "inv_to": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Invoice to the attention of.",
                    "maxLength": 200
                  },
                  "inv_street": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Invoice street.",
                    "maxLength": 200
                  },
                  "inv_street_number": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Invoice street number.",
                    "maxLength": 20
                  },
                  "inv_street_box": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Invoice street box.",
                    "maxLength": 20
                  },
                  "inv_zip_code": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Invoice ZIP code.",
                    "maxLength": 20
                  },
                  "inv_city": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Invoice city.",
                    "maxLength": 100
                  },
                  "inv_state": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Invoice state.",
                    "maxLength": 100
                  },
                  "inv_country": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Invoice country code.\nUse ISO 3166-1 alpha-2 format.",
                    "maxLength": 2
                  },
                  "inv_vat_number": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Invoice VAT number.",
                    "maxLength": 50
                  },
                  "inv_vat_registered_in_eu": {
                    "type": "boolean",
                    "description": "Whether the invoice company is VAT registered in the EU."
                  },
                  "language": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Language of the attendee.",
                    "enum": [
                      "ar",
                      "bg",
                      "cs",
                      "zh",
                      "da",
                      "de",
                      "et",
                      "el",
                      "en",
                      "es",
                      "fr",
                      "ga",
                      "he",
                      "hi",
                      "hr",
                      "it",
                      "ja",
                      "ko",
                      "lv",
                      "lt",
                      "hu",
                      "mt",
                      "nl",
                      "nb",
                      "pl",
                      "pt",
                      "ro",
                      "ru",
                      "sk",
                      "sl",
                      "fi",
                      "sv",
                      "tr",
                      "is"
                    ],
                    "default": "language of the event"
                  },
                  "timezone": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Timezone of the attendee.",
                    "example": "Europe/Brussels",
                    "maxLength": 32
                  },
                  "data": {
                    "type": "object",
                    "description": "Custom fields data of the attendee.",
                    "additionalProperties": {}
                  },
                  "comment": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Comment left by the attendee."
                  },
                  "notes": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Notes about the attendee."
                  },
                  "registration_status": {
                    "type": "string",
                    "description": "Attendee's registration status name.<br>\nSection: `Profile / Events settings / Registration statuses`<br>\nOr use `events/attendees-statuses` api method to collect them dynamically."
                  },
                  "category_id": {
                    "type": "integer",
                    "description": "Category ID of the attendee."
                  },
                  "category_quantity": {
                    "type": "integer",
                    "description": "Number of tickets of the attendee.",
                    "default": 1,
                    "minimum": 1
                  },
                  "hotel_id": {
                    "type": "integer",
                    "description": "ID of the hotel booked by the attendee."
                  },
                  "hotel_room_id": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "description": "ID of the hotel room booked by the attendee."
                  },
                  "hotel_notes": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Notes about the attendee's hotel."
                  },
                  "arrival": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Hotel arrival date of the attendee.<br>\n`Must be in YYYY-MM-DD format`",
                    "example": "2022-10-25"
                  },
                  "departure": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Hotel departure date of the attendee.<br>\n`Must be in YYYY-MM-DD format`",
                    "example": "2022-10-25"
                  },
                  "coupon_id": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "description": "ID of the coupon used by the attendee."
                  },
                  "payment_status": {
                    "type": "integer",
                    "description": "Payment status of the attendee's registration.<br>\nAllowed values: `0 = WAITING_FOR_PAYMENT` `1 = PAID` `2 = CANCELLED` `3 = FREE` `4 = PARTIAL_PAYMENT` `5 = PAID_WAITING_PROVIDER`"
                  },
                  "payment_method": {
                    "type": "integer",
                    "description": "Payment method used to pay the attendee's registration.<br>\nAllowed values: `0 = NOT_PAID` `2 = BANK_WIRE` `6 = OTHER`"
                  },
                  "payment_date": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Payment date of the attendee's registration.<br>\n`Must be in ISO 8601 format`",
                    "example": "2022-10-25T16:10:00+02:00"
                  },
                  "hotel_options": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "description": "IDs of the booked hotel options of the attendee.",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "options": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "description": "Options of the attendee.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "ID of the option."
                        },
                        "quantity": {
                          "type": "integer",
                          "description": "Quantity booked",
                          "minimum": 1
                        }
                      },
                      "required": [
                        "id",
                        "quantity"
                      ]
                    }
                  }
                },
                "required": [
                  "event_uid",
                  "email",
                  "category_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`Guest`\n\n`MappedGuest`",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Guest"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MappedGuest"
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/attendees/checkin": {
      "post": {
        "operationId": "attendees.createCheckin",
        "description": "Create new check-in or check-out for an attendee in your events using APIs.",
        "summary": "Create a new check-in",
        "tags": [
          "Attendees"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "event_uid": {
                    "type": "string",
                    "description": "UID of the event."
                  },
                  "guest_uid": {
                    "type": "string",
                    "description": "UID of the attendee."
                  },
                  "type": {
                    "type": "string",
                    "description": "Whether this is a check-in or a check-out.",
                    "enum": [
                      "in",
                      "out"
                    ]
                  },
                  "option_id": {
                    "type": "integer",
                    "description": "ID of the related option."
                  },
                  "timestamp": {
                    "type": "string",
                    "format": "date",
                    "description": "Date and time of the check-in or check-out.<br>\n`Must be in ISO 8601 format`",
                    "example": "2022-10-25T16:10:00+02:00",
                    "default": "current date and time"
                  }
                },
                "required": [
                  "event_uid",
                  "guest_uid"
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "operationId": "attendees.getTransactions",
        "description": "Fetch all payments, registered and cancelled transactions for a given attendee.",
        "summary": "Get attendee transactions",
        "tags": [
          "Attendees"
        ],
        "parameters": [
          {
            "name": "guest_uid",
            "in": "query",
            "required": true,
            "description": "UID of an attendee.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transaction_type",
            "in": "query",
            "description": "Type of transaction.<br>\nAllowed values: `0 = REGISTRATION` `1 = CANCELLATION` `2 = RECEIPT` `3 = INVOICE` `4 = CREDIT NOTE` `5 = PAYMENT`",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "description": "Date from which to fetch transactions.<br>\n`Must be in ISO 8601 format`",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2022-10-25T16:10:00+02:00"
          }
        ],
        "responses": {
          "200": {
            "description": "`Transactions`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Transactions"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "403": {
            "description": "An error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error overview.",
                      "example": "Not authorized"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/events": {
      "get": {
        "operationId": "events.getEvents",
        "description": "This method is used to collect the **list of events associated to all profiles connected to this integration, with pagination**. You can specify the events' status and language to filter on.",
        "summary": "Get events",
        "tags": [
          "Events"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "query",
            "description": "UID of an event.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Comma-separated list of event statuses.<br>\nAllowed values: `Archived` `Cancelled` `Closed` `InProgress` `Offline` `Postponed` `Published` `Registering` `SoldOut`",
            "schema": {
              "type": "string",
              "default": "Published,Registering,SoldOut,InProgress"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Language of the events.",
            "schema": {
              "type": "string",
              "enum": [
                "ar",
                "bg",
                "cs",
                "zh",
                "da",
                "de",
                "et",
                "el",
                "en",
                "es",
                "fr",
                "ga",
                "he",
                "hi",
                "hr",
                "it",
                "ja",
                "ko",
                "lv",
                "lt",
                "hu",
                "mt",
                "nl",
                "nb",
                "pl",
                "pt",
                "ro",
                "ru",
                "sk",
                "sl",
                "fi",
                "sv",
                "tr",
                "is"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of events shown per page.",
            "schema": {
              "type": "integer",
              "default": 20,
              "minimum": 1,
              "maximum": 200
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Sort by",
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "start_date",
                "end_date",
                "status"
              ],
              "default": "name"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "Sort order",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated set of `Event`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Event"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "from": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "last_page": {
                          "type": "integer"
                        },
                        "links": {
                          "type": "array",
                          "description": "Generated paginator links.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "label": {
                                "type": "string"
                              },
                              "active": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "url",
                              "label",
                              "active"
                            ]
                          }
                        },
                        "path": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Base path for paginator generated URLs."
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "Number of items shown per page."
                        },
                        "to": {
                          "type": [
                            "integer",
                            "null"
                          ],
                          "description": "Number of the last item in the slice."
                        },
                        "total": {
                          "type": "integer",
                          "description": "Total number of items being paginated."
                        }
                      },
                      "required": [
                        "current_page",
                        "from",
                        "last_page",
                        "links",
                        "path",
                        "per_page",
                        "to",
                        "total"
                      ]
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "last": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "prev": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "next": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "required": [
                        "first",
                        "last",
                        "prev",
                        "next"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "links",
                    "meta"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "post": {
        "operationId": "events.createEvent",
        "description": "Create new event using APIs.",
        "summary": "Create a new event",
        "tags": [
          "Events"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "apply_auto_config": {
                    "type": "boolean",
                    "description": "Whether to apply the auto configuration settings on the event after his creation.<br>\nSection: `API specific`",
                    "default": false
                  },
                  "template_event_uid": {
                    "type": "string",
                    "description": "UID of the event used as a template to configure the new one.<br>\nSection: `API specific`"
                  },
                  "translation_for_uid": {
                    "type": "string",
                    "description": "UID of the event for which this is a translation.<br>\nSection: `API specific`"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the event.<br>\nSection: `More actions`",
                    "enum": [
                      "Offline",
                      "Published",
                      "Registering",
                      "SoldOut",
                      "InProgress",
                      "Closed",
                      "Archived",
                      "Cancelled",
                      "Postponed"
                    ],
                    "default": "Offline"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the event.<br>\nSection: `Essentials / Basics`",
                    "maxLength": 255
                  },
                  "alias": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Alias (internal name) of the event.<br>\nSection: `Essentials / Basics`<br>\n`Must be unique`",
                    "maxLength": 255
                  },
                  "url_name": {
                    "type": "string",
                    "description": "Slug for the url of the event.<br>\nSection: `Essentials / Basics`<br>\n`Must only contain letters, numbers, dashes and underscores`<br>\n`Must be unique`",
                    "example": "my-event-unique-slug",
                    "maxLength": 100
                  },
                  "language": {
                    "type": "string",
                    "description": "Language of the event.<br>\nSection: `Essentials / Basics`",
                    "enum": [
                      "ar",
                      "bg",
                      "cs",
                      "zh",
                      "da",
                      "de",
                      "et",
                      "el",
                      "en",
                      "es",
                      "fr",
                      "ga",
                      "he",
                      "hi",
                      "hr",
                      "it",
                      "ja",
                      "ko",
                      "lv",
                      "lt",
                      "hu",
                      "mt",
                      "nl",
                      "nb",
                      "pl",
                      "pt",
                      "ro",
                      "ru",
                      "sk",
                      "sl",
                      "fi",
                      "sv",
                      "tr",
                      "is"
                    ]
                  },
                  "profile_uid": {
                    "type": "string",
                    "description": "UID of the profile of the event.<br>\nSection: `Essentials / Basics`"
                  },
                  "organiser": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Organiser of the event.<br>\nSection: `Essentials / Basics`",
                    "maxLength": 100
                  },
                  "is_date_unknown": {
                    "type": "boolean",
                    "description": "Whether there is an event date.<br>\nSection: `Essentials / Dates`",
                    "default": true
                  },
                  "start_date": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date",
                    "description": "Start date of the event.<br>\nSection: `Essentials / Dates`<br>\nThe format depends on `is_all_day`.<br>\n`Must be in YYYY-MM-DDThh:mm:ss¬±hh:mm, YYYY-MM-DD hh:mm:ss or YYYY-MM-DD format`<br>\n`Required if is_date_unknown is false`",
                    "example": "2022-10-25 08:05:04"
                  },
                  "end_date": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date",
                    "description": "End date of the event.<br>\nSection: `Essentials / Dates`<br>\nThe format depends on `is_all_day`.<br>\n`Must be in YYYY-MM-DDThh:mm:ss¬±hh:mm, YYYY-MM-DD hh:mm:ss or YYYY-MM-DD format`<br>\n`Required if is_date_unknown is false`",
                    "example": "2022-10-25 08:05:04"
                  },
                  "is_all_day": {
                    "type": "boolean",
                    "description": "Whether this is an all day event.<br>\nSection: `Essentials / Dates`",
                    "default": false
                  },
                  "has_registering_period": {
                    "type": "boolean",
                    "description": "Whether the event has a registration period.\nSection: `Essentials / Dates`",
                    "default": false
                  },
                  "reg_start_date": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date",
                    "description": "Registration start date.<br>\nSection: `Essentials / Dates`<br>\n`Must be in YYYY-MM-DDThh:mm:ss¬±hh:mm, YYYY-MM-DD hh:mm:ss format`<br>\n`Required if has_registering_period is true`",
                    "example": "2022-10-25 08:05:04"
                  },
                  "reg_end_date": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date",
                    "description": "Registration end date.<br>\nSection: `Essentials / Dates`<br>\n`Must be in YYYY-MM-DDThh:mm:ss¬±hh:mm, YYYY-MM-DD hh:mm:ss format`<br>\n`Required if has_registering_period is true`",
                    "example": "2022-10-25 08:05:04"
                  },
                  "has_notify_me": {
                    "type": "boolean",
                    "description": "Collect \"Notify me\" prospects prior to registering period.<br>\nSection: `Essentials / Dates`",
                    "default": false
                  },
                  "locale": {
                    "type": "string",
                    "description": "Locale (Regional settings) of the event.<br>\nSection: `Essentials / Regional settings`",
                    "enum": [
                      "af",
                      "af_NA",
                      "af_ZA",
                      "ak",
                      "ak_GH",
                      "sq",
                      "sq_AL",
                      "sq_MK",
                      "am",
                      "am_ET",
                      "ar",
                      "ar_DZ",
                      "ar_BH",
                      "ar_TD",
                      "ar_KM",
                      "ar_DJ",
                      "ar_EG",
                      "ar_ER",
                      "ar_IQ",
                      "ar_IL",
                      "ar_JO",
                      "ar_KW",
                      "ar_LB",
                      "ar_LY",
                      "ar_MR",
                      "ar_MA",
                      "ar_OM",
                      "ar_PS",
                      "ar_QA",
                      "ar_SA",
                      "ar_SO",
                      "ar_SS",
                      "ar_SD",
                      "ar_SY",
                      "ar_TN",
                      "ar_AE",
                      "ar_EH",
                      "ar_001",
                      "ar_YE",
                      "hy",
                      "hy_AM",
                      "as",
                      "as_IN",
                      "az",
                      "az_AZ",
                      "az_Cyrl_AZ",
                      "az_Cyrl",
                      "az_Latn_AZ",
                      "az_Latn",
                      "bm",
                      "bm_ML",
                      "bn",
                      "bn_BD",
                      "bn_IN",
                      "eu",
                      "eu_ES",
                      "be",
                      "be_BY",
                      "bs",
                      "bs_BA",
                      "bs_Cyrl_BA",
                      "bs_Cyrl",
                      "bs_Latn_BA",
                      "bs_Latn",
                      "br",
                      "br_FR",
                      "bg",
                      "bg_BG",
                      "my",
                      "my_MM",
                      "ca",
                      "ca_AD",
                      "ca_FR",
                      "ca_IT",
                      "ca_ES",
                      "ce",
                      "ce_RU",
                      "zh",
                      "zh_CN",
                      "zh_HK",
                      "zh_MO",
                      "zh_Hans_CN",
                      "zh_Hans_HK",
                      "zh_Hans_MO",
                      "zh_Hans_MY",
                      "zh_Hans_SG",
                      "zh_Hans",
                      "zh_SG",
                      "zh_TW",
                      "zh_Hant_HK",
                      "zh_Hant_MO",
                      "zh_Hant_MY",
                      "zh_Hant_TW",
                      "zh_Hant",
                      "cv",
                      "cv_RU",
                      "kw",
                      "kw_GB",
                      "hr",
                      "hr_BA",
                      "hr_HR",
                      "cs",
                      "cs_CZ",
                      "da",
                      "da_DK",
                      "da_GL",
                      "nl",
                      "nl_AW",
                      "nl_BE",
                      "nl_BQ",
                      "nl_CW",
                      "nl_NL",
                      "nl_SX",
                      "nl_SR",
                      "dz",
                      "dz_BT",
                      "en",
                      "en_AS",
                      "en_AI",
                      "en_AG",
                      "en_AU",
                      "en_AT",
                      "en_BS",
                      "en_BB",
                      "en_BE",
                      "en_BZ",
                      "en_BM",
                      "en_BW",
                      "en_IO",
                      "en_VG",
                      "en_BI",
                      "en_CM",
                      "en_CA",
                      "en_KY",
                      "en_CX",
                      "en_CC",
                      "en_CK",
                      "en_CY",
                      "en_CZ",
                      "en_DK",
                      "en_DM",
                      "en_ER",
                      "en_SZ",
                      "en_150",
                      "en_FK",
                      "en_FJ",
                      "en_FI",
                      "en_FR",
                      "en_GM",
                      "en_DE",
                      "en_GH",
                      "en_GI",
                      "en_GD",
                      "en_GU",
                      "en_GG",
                      "en_GY",
                      "en_HK",
                      "en_HU",
                      "en_IN",
                      "en_ID",
                      "en_IE",
                      "en_IM",
                      "en_IL",
                      "en_IT",
                      "en_JM",
                      "en_JE",
                      "en_KE",
                      "en_KI",
                      "en_LS",
                      "en_LR",
                      "en_MO",
                      "en_MG",
                      "en_MW",
                      "en_MY",
                      "en_MV",
                      "en_MT",
                      "en_MH",
                      "en_MU",
                      "en_FM",
                      "en_MS",
                      "en_NA",
                      "en_NR",
                      "en_NL",
                      "en_NZ",
                      "en_NG",
                      "en_NU",
                      "en_NF",
                      "en_MP",
                      "en_NO",
                      "en_PK",
                      "en_PW",
                      "en_PG",
                      "en_PH",
                      "en_PN",
                      "en_PL",
                      "en_PT",
                      "en_PR",
                      "en_RO",
                      "en_RW",
                      "en_WS",
                      "en_SC",
                      "en_SL",
                      "en_SG",
                      "en_SX",
                      "en_SK",
                      "en_SI",
                      "en_SB",
                      "en_ZA",
                      "en_GS",
                      "en_SS",
                      "en_ES",
                      "en_SH",
                      "en_KN",
                      "en_LC",
                      "en_VC",
                      "en_SD",
                      "en_SE",
                      "en_CH",
                      "en_TZ",
                      "en_TK",
                      "en_TO",
                      "en_TT",
                      "en_TC",
                      "en_TV",
                      "en_UM",
                      "en_VI",
                      "en_UG",
                      "en_AE",
                      "en_GB",
                      "en_US",
                      "en_VU",
                      "en_001",
                      "en_ZM",
                      "en_ZW",
                      "eo",
                      "eo_001",
                      "et",
                      "et_EE",
                      "ee",
                      "ee_GH",
                      "ee_TG",
                      "fo",
                      "fo_DK",
                      "fo_FO",
                      "fi",
                      "fi_FI",
                      "fr",
                      "fr_DZ",
                      "fr_BE",
                      "fr_BJ",
                      "fr_BF",
                      "fr_BI",
                      "fr_CM",
                      "fr_CA",
                      "fr_CF",
                      "fr_TD",
                      "fr_KM",
                      "fr_CG",
                      "fr_CD",
                      "fr_CI",
                      "fr_DJ",
                      "fr_GQ",
                      "fr_FR",
                      "fr_GF",
                      "fr_PF",
                      "fr_GA",
                      "fr_GP",
                      "fr_GN",
                      "fr_HT",
                      "fr_LU",
                      "fr_MG",
                      "fr_ML",
                      "fr_MQ",
                      "fr_MR",
                      "fr_MU",
                      "fr_YT",
                      "fr_MC",
                      "fr_MA",
                      "fr_NC",
                      "fr_NE",
                      "fr_RE",
                      "fr_RW",
                      "fr_SN",
                      "fr_SC",
                      "fr_BL",
                      "fr_MF",
                      "fr_PM",
                      "fr_CH",
                      "fr_SY",
                      "fr_TG",
                      "fr_TN",
                      "fr_VU",
                      "fr_WF",
                      "ff",
                      "ff_Adlm_BF",
                      "ff_Adlm_CM",
                      "ff_Adlm_GM",
                      "ff_Adlm_GH",
                      "ff_Adlm_GW",
                      "ff_Adlm_GN",
                      "ff_Adlm_LR",
                      "ff_Adlm_MR",
                      "ff_Adlm_NE",
                      "ff_Adlm_NG",
                      "ff_Adlm_SN",
                      "ff_Adlm_SL",
                      "ff_Adlm",
                      "ff_CM",
                      "ff_GN",
                      "ff_Latn_BF",
                      "ff_Latn_CM",
                      "ff_Latn_GM",
                      "ff_Latn_GH",
                      "ff_Latn_GW",
                      "ff_Latn_GN",
                      "ff_Latn_LR",
                      "ff_Latn_MR",
                      "ff_Latn_NE",
                      "ff_Latn_NG",
                      "ff_Latn_SN",
                      "ff_Latn_SL",
                      "ff_Latn",
                      "ff_MR",
                      "ff_SN",
                      "gl",
                      "gl_ES",
                      "lg",
                      "lg_UG",
                      "ka",
                      "ka_GE",
                      "de",
                      "de_AT",
                      "de_BE",
                      "de_DE",
                      "de_IT",
                      "de_LI",
                      "de_LU",
                      "de_CH",
                      "el",
                      "el_CY",
                      "el_GR",
                      "gu",
                      "gu_IN",
                      "ha",
                      "ha_GH",
                      "ha_NE",
                      "ha_NG",
                      "he",
                      "he_IL",
                      "hi",
                      "hi_IN",
                      "hi_Latn_IN",
                      "hi_Latn",
                      "hu",
                      "hu_HU",
                      "is",
                      "is_IS",
                      "ig",
                      "ig_NG",
                      "id",
                      "id_ID",
                      "ia",
                      "ia_001",
                      "ie",
                      "ie_EE",
                      "ga",
                      "ga_IE",
                      "ga_GB",
                      "it",
                      "it_IT",
                      "it_SM",
                      "it_CH",
                      "it_VA",
                      "ja",
                      "ja_JP",
                      "jv",
                      "jv_ID",
                      "kl",
                      "kl_GL",
                      "kn",
                      "kn_IN",
                      "ks",
                      "ks_Arab_IN",
                      "ks_Arab",
                      "ks_Deva_IN",
                      "ks_Deva",
                      "ks_IN",
                      "kk",
                      "kk_Cyrl_KZ",
                      "kk_Cyrl",
                      "kk_KZ",
                      "km",
                      "km_KH",
                      "ki",
                      "ki_KE",
                      "rw",
                      "rw_RW",
                      "ko",
                      "ko_CN",
                      "ko_KP",
                      "ko_KR",
                      "ku",
                      "ku_TR",
                      "ky",
                      "ky_KG",
                      "lo",
                      "lo_LA",
                      "lv",
                      "lv_LV",
                      "ln",
                      "ln_AO",
                      "ln_CF",
                      "ln_CG",
                      "ln_CD",
                      "lt",
                      "lt_LT",
                      "lu",
                      "lu_CD",
                      "lb",
                      "lb_LU",
                      "mk",
                      "mk_MK",
                      "mg",
                      "mg_MG",
                      "ms",
                      "ms_BN",
                      "ms_ID",
                      "ms_MY",
                      "ms_SG",
                      "ml",
                      "ml_IN",
                      "mt",
                      "mt_MT",
                      "gv",
                      "gv_IM",
                      "mi",
                      "mi_NZ",
                      "mr",
                      "mr_IN",
                      "mn",
                      "mn_MN",
                      "ne",
                      "ne_IN",
                      "ne_NP",
                      "nd",
                      "nd_ZW",
                      "se",
                      "se_FI",
                      "se_NO",
                      "se_SE",
                      "no",
                      "no_NO",
                      "nb",
                      "nb_NO",
                      "nb_SJ",
                      "nn",
                      "nn_NO",
                      "oc",
                      "oc_FR",
                      "oc_ES",
                      "or",
                      "or_IN",
                      "om",
                      "om_ET",
                      "om_KE",
                      "os",
                      "os_GE",
                      "os_RU",
                      "ps",
                      "ps_AF",
                      "ps_PK",
                      "fa",
                      "fa_AF",
                      "fa_IR",
                      "pl",
                      "pl_PL",
                      "pt",
                      "pt_AO",
                      "pt_BR",
                      "pt_CV",
                      "pt_GQ",
                      "pt_GW",
                      "pt_LU",
                      "pt_MO",
                      "pt_MZ",
                      "pt_PT",
                      "pt_ST",
                      "pt_CH",
                      "pt_TL",
                      "pa",
                      "pa_Arab_PK",
                      "pa_Arab",
                      "pa_Guru_IN",
                      "pa_Guru",
                      "pa_IN",
                      "pa_PK",
                      "qu",
                      "qu_BO",
                      "qu_EC",
                      "qu_PE",
                      "ro",
                      "ro_MD",
                      "ro_RO",
                      "rm",
                      "rm_CH",
                      "rn",
                      "rn_BI",
                      "ru",
                      "ru_BY",
                      "ru_KZ",
                      "ru_KG",
                      "ru_MD",
                      "ru_RU",
                      "ru_UA",
                      "sg",
                      "sg_CF",
                      "sa",
                      "sa_IN",
                      "sc",
                      "sc_IT",
                      "gd",
                      "gd_GB",
                      "sr",
                      "sr_BA",
                      "sr_Cyrl_BA",
                      "sr_Cyrl_ME",
                      "sr_Cyrl_RS",
                      "sr_Cyrl",
                      "sr_Latn_BA",
                      "sr_Latn_ME",
                      "sr_Latn_RS",
                      "sr_Latn",
                      "sr_ME",
                      "sr_RS",
                      "sh",
                      "sh_BA",
                      "sn",
                      "sn_ZW",
                      "ii",
                      "ii_CN",
                      "sd",
                      "sd_Arab_PK",
                      "sd_Arab",
                      "sd_Deva_IN",
                      "sd_Deva",
                      "sd_IN",
                      "sd_PK",
                      "si",
                      "si_LK",
                      "sk",
                      "sk_SK",
                      "sl",
                      "sl_SI",
                      "so",
                      "so_DJ",
                      "so_ET",
                      "so_KE",
                      "so_SO",
                      "st",
                      "st_LS",
                      "st_ZA",
                      "es",
                      "es_AR",
                      "es_BZ",
                      "es_BO",
                      "es_BR",
                      "es_CL",
                      "es_CO",
                      "es_CR",
                      "es_CU",
                      "es_DO",
                      "es_EC",
                      "es_SV",
                      "es_GQ",
                      "es_GT",
                      "es_HN",
                      "es_419",
                      "es_MX",
                      "es_NI",
                      "es_PA",
                      "es_PY",
                      "es_PE",
                      "es_PH",
                      "es_PR",
                      "es_ES",
                      "es_US",
                      "es_UY",
                      "es_VE",
                      "su",
                      "su_ID",
                      "su_Latn_ID",
                      "su_Latn",
                      "sw",
                      "sw_CD",
                      "sw_KE",
                      "sw_TZ",
                      "sw_UG",
                      "sv",
                      "sv_AX",
                      "sv_FI",
                      "sv_SE",
                      "tl",
                      "tl_PH",
                      "tg",
                      "tg_TJ",
                      "ta",
                      "ta_IN",
                      "ta_MY",
                      "ta_SG",
                      "ta_LK",
                      "tt",
                      "tt_RU",
                      "te",
                      "te_IN",
                      "th",
                      "th_TH",
                      "bo",
                      "bo_CN",
                      "bo_IN",
                      "ti",
                      "ti_ER",
                      "ti_ET",
                      "to",
                      "to_TO",
                      "tn",
                      "tn_BW",
                      "tn_ZA",
                      "tr",
                      "tr_CY",
                      "tr_TR",
                      "tk",
                      "tk_TM",
                      "uk",
                      "uk_UA",
                      "ur",
                      "ur_IN",
                      "ur_PK",
                      "ug",
                      "ug_CN",
                      "uz",
                      "uz_AF",
                      "uz_Arab_AF",
                      "uz_Arab",
                      "uz_Cyrl_UZ",
                      "uz_Cyrl",
                      "uz_Latn_UZ",
                      "uz_Latn",
                      "uz_UZ",
                      "vi",
                      "vi_VN",
                      "cy",
                      "cy_GB",
                      "fy",
                      "fy_NL",
                      "wo",
                      "wo_SN",
                      "xh",
                      "xh_ZA",
                      "yi",
                      "yi_UA",
                      "yo",
                      "yo_BJ",
                      "yo_NG",
                      "za",
                      "za_CN",
                      "zu",
                      "zu_ZA"
                    ]
                  },
                  "location_type": {
                    "type": "string",
                    "description": "Type of event location.<br>\nSection: `Essentials / Main location`",
                    "enum": [
                      "offline",
                      "online"
                    ]
                  },
                  "location": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Location name.<br>\nSection: `Essentials / Main location`<br>\n`Required if location_type is online`",
                    "maxLength": 512
                  },
                  "street": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Street name.<br>\nSection: `Essentials / Main location`",
                    "maxLength": 100
                  },
                  "street_number": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Street Number.<br>\nSection: `Essentials / Main location`",
                    "maxLength": 20
                  },
                  "street_box": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Box.<br>\nSection: `Essentials / Main location`",
                    "maxLength": 20
                  },
                  "zip_code": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Post code.<br>\nSection: `Essentials / Main location`",
                    "maxLength": 20
                  },
                  "city": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "City.<br>\nSection: `Essentials / Main location`",
                    "maxLength": 100
                  },
                  "state": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "State.<br>\nSection: `Essentials / Main location`",
                    "maxLength": 100
                  },
                  "country": {
                    "type": "string",
                    "description": "Country.<br>\nSection: `Essentials / Main location`<br>\n`Must be a valid ISO 3166 alpha-2 country code`",
                    "enum": [
                      "AD",
                      "AE",
                      "AF",
                      "AG",
                      "AI",
                      "AL",
                      "AM",
                      "AO",
                      "AQ",
                      "AR",
                      "AS",
                      "AT",
                      "AU",
                      "AW",
                      "AX",
                      "AZ",
                      "BA",
                      "BB",
                      "BD",
                      "BE",
                      "BF",
                      "BG",
                      "BH",
                      "BI",
                      "BJ",
                      "BL",
                      "BM",
                      "BN",
                      "BO",
                      "BQ",
                      "BR",
                      "BS",
                      "BT",
                      "BV",
                      "BW",
                      "BY",
                      "BZ",
                      "CA",
                      "CC",
                      "CD",
                      "CF",
                      "CG",
                      "CH",
                      "CI",
                      "CK",
                      "CL",
                      "CM",
                      "CN",
                      "CO",
                      "CR",
                      "CU",
                      "CV",
                      "CW",
                      "CX",
                      "CY",
                      "CZ",
                      "DE",
                      "DJ",
                      "DK",
                      "DM",
                      "DO",
                      "DZ",
                      "EC",
                      "EE",
                      "EG",
                      "EH",
                      "ER",
                      "ES",
                      "ET",
                      "FI",
                      "FJ",
                      "FK",
                      "FM",
                      "FO",
                      "FR",
                      "GA",
                      "GB",
                      "GD",
                      "GE",
                      "GF",
                      "GG",
                      "GH",
                      "GI",
                      "GL",
                      "GM",
                      "GN",
                      "GP",
                      "GQ",
                      "GR",
                      "GS",
                      "GT",
                      "GU",
                      "GW",
                      "GY",
                      "HK",
                      "HM",
                      "HN",
                      "HR",
                      "HT",
                      "HU",
                      "ID",
                      "IE",
                      "IL",
                      "IM",
                      "IN",
                      "IO",
                      "IQ",
                      "IR",
                      "IS",
                      "IT",
                      "JE",
                      "JM",
                      "JO",
                      "JP",
                      "KE",
                      "KG",
                      "KH",
                      "KI",
                      "KM",
                      "KN",
                      "KP",
                      "KR",
                      "KW",
                      "KY",
                      "KZ",
                      "LA",
                      "LB",
                      "LC",
                      "LI",
                      "LK",
                      "LR",
                      "LS",
                      "LT",
                      "LU",
                      "LV",
                      "LY",
                      "MA",
                      "MC",
                      "MD",
                      "ME",
                      "MF",
                      "MG",
                      "MH",
                      "MK",
                      "ML",
                      "MM",
                      "MN",
                      "MO",
                      "MP",
                      "MQ",
                      "MR",
                      "MS",
                      "MT",
                      "MU",
                      "MV",
                      "MW",
                      "MX",
                      "MY",
                      "MZ",
                      "NA",
                      "NC",
                      "NE",
                      "NF",
                      "NG",
                      "NI",
                      "NL",
                      "NO",
                      "NP",
                      "NR",
                      "NU",
                      "NZ",
                      "OM",
                      "PA",
                      "PE",
                      "PF",
                      "PG",
                      "PH",
                      "PK",
                      "PL",
                      "PM",
                      "PN",
                      "PR",
                      "PS",
                      "PT",
                      "PW",
                      "PY",
                      "QA",
                      "RE",
                      "RO",
                      "RS",
                      "RU",
                      "RW",
                      "SA",
                      "SB",
                      "SC",
                      "SD",
                      "SE",
                      "SG",
                      "SH",
                      "SI",
                      "SJ",
                      "SK",
                      "SL",
                      "SM",
                      "SN",
                      "SO",
                      "SR",
                      "SS",
                      "ST",
                      "SV",
                      "SX",
                      "SY",
                      "SZ",
                      "TC",
                      "TD",
                      "TF",
                      "TG",
                      "TH",
                      "TJ",
                      "TK",
                      "TL",
                      "TM",
                      "TN",
                      "TO",
                      "TR",
                      "TT",
                      "TV",
                      "TW",
                      "TZ",
                      "UA",
                      "UG",
                      "UM",
                      "US",
                      "UY",
                      "UZ",
                      "VA",
                      "VC",
                      "VE",
                      "VG",
                      "VI",
                      "VN",
                      "VU",
                      "WF",
                      "WS",
                      "YE",
                      "YT",
                      "ZA",
                      "ZM",
                      "ZW"
                    ]
                  },
                  "latitude": {
                    "type": [
                      "number",
                      "null"
                    ],
                    "description": "Latitude.<br>\nSection: `Essentials / Main location`",
                    "example": 50.7116005
                  },
                  "longitude": {
                    "type": [
                      "number",
                      "null"
                    ],
                    "description": "Longitude.<br>\nSection: `Essentials / Main location`",
                    "example": 4.3292619
                  },
                  "timezone": {
                    "type": "string",
                    "description": "Timezone of the event location.<br>\nSection: `Essentials / Main location`",
                    "example": "Europe/Brussels",
                    "maxLength": 32
                  },
                  "is_free": {
                    "type": "boolean",
                    "description": "Whether the event is free or paid.<br>\nSection: `Essentials / Pricing plan`",
                    "default": true
                  },
                  "currency": {
                    "type": "string",
                    "description": "Currency of the event.<br>\nSection: `Essentials / Pricing plan`<br>\n`Must be a valid ISO 4217 currency code`<br>\n`Required if is_free is false`",
                    "enum": [
                      "AFN",
                      "ALL",
                      "DZD",
                      "AOA",
                      "ARS",
                      "AMD",
                      "AWG",
                      "AUD",
                      "AZN",
                      "BSD",
                      "BHD",
                      "BDT",
                      "BBD",
                      "BYN",
                      "BZD",
                      "BMD",
                      "BTN",
                      "VED",
                      "BOB",
                      "BAM",
                      "BWP",
                      "BRL",
                      "GBP",
                      "BND",
                      "BGN",
                      "BIF",
                      "KHR",
                      "CAD",
                      "CVE",
                      "XCG",
                      "KYD",
                      "XAF",
                      "XPF",
                      "CLP",
                      "CNY",
                      "COP",
                      "KMF",
                      "CDF",
                      "CRC",
                      "CUP",
                      "CZK",
                      "DKK",
                      "DJF",
                      "DOP",
                      "XCD",
                      "EGP",
                      "ERN",
                      "ETB",
                      "EUR",
                      "FKP",
                      "FJD",
                      "GMD",
                      "GEL",
                      "GHS",
                      "GIP",
                      "GTQ",
                      "GNF",
                      "GYD",
                      "HTG",
                      "HNL",
                      "HKD",
                      "HUF",
                      "ISK",
                      "INR",
                      "IDR",
                      "IRR",
                      "IQD",
                      "ILS",
                      "JMD",
                      "JPY",
                      "JOD",
                      "KZT",
                      "KES",
                      "KWD",
                      "KGS",
                      "LAK",
                      "LBP",
                      "LSL",
                      "LRD",
                      "LYD",
                      "MOP",
                      "MKD",
                      "MGA",
                      "MWK",
                      "MYR",
                      "MVR",
                      "MRU",
                      "MUR",
                      "MXN",
                      "MDL",
                      "MNT",
                      "MAD",
                      "MZN",
                      "MMK",
                      "NAD",
                      "NPR",
                      "TWD",
                      "NZD",
                      "NIO",
                      "NGN",
                      "KPW",
                      "NOK",
                      "OMR",
                      "PKR",
                      "PAB",
                      "PGK",
                      "PYG",
                      "PEN",
                      "PHP",
                      "PLN",
                      "QAR",
                      "RON",
                      "RUB",
                      "RWF",
                      "SVC",
                      "WST",
                      "STN",
                      "SAR",
                      "RSD",
                      "SCR",
                      "SLE",
                      "SGD",
                      "SBD",
                      "SOS",
                      "ZAR",
                      "KRW",
                      "SSP",
                      "LKR",
                      "SHP",
                      "SDG",
                      "SRD",
                      "SZL",
                      "SEK",
                      "CHF",
                      "SYP",
                      "TJS",
                      "TZS",
                      "THB",
                      "TOP",
                      "TTD",
                      "TND",
                      "TRY",
                      "TMT",
                      "UGX",
                      "UAH",
                      "AED",
                      "UYW",
                      "UYU",
                      "USD",
                      "UZS",
                      "VUV",
                      "VES",
                      "VND",
                      "XOF",
                      "YER",
                      "ZMW",
                      "ZWG"
                    ]
                  },
                  "is_first_steps_inverted": {
                    "type": "boolean",
                    "description": "Whether to invert the two first registration steps: Category and options first.<br>\nSection: `Essentials / Registration flow`",
                    "default": false
                  },
                  "skip_step2": {
                    "type": "boolean",
                    "description": "Whether to skip the second registration step: Category and options.<br>\nSection: `Essentials / Registration flow`",
                    "default": false
                  },
                  "skip_step3": {
                    "type": "boolean",
                    "description": "Whether to skip the third registration step: Hotels.<br>\nSection: `Essentials / Registration flow`",
                    "default": false
                  },
                  "skip_step4": {
                    "type": "boolean",
                    "description": "Whether to skip the fourth registration step: Checkout.<br>\nSection: `Essentials / Registration flow`",
                    "default": false
                  },
                  "display_title_on_img": {
                    "type": "integer",
                    "description": "How to display the title on the cover image.<br>\nSection: `Content / Website / Homepage`<br>\nAllowed values: `0 = Underneath cover image` `1 = Over cover image` `2 = No title`",
                    "default": 1,
                    "minimum": 0,
                    "maximum": 2
                  },
                  "description": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "HTML Description of the event.<br>\nSection: `Content / Website / Homepage`"
                  },
                  "display_share": {
                    "type": "boolean",
                    "description": "Display social networks share icons on the event page.<br>\nSection: `Content / Website / Display options`",
                    "default": false
                  },
                  "is_address_hidden": {
                    "type": "boolean",
                    "description": "Whether the event location is hidden from the homepage, the check-out page and the confirmation email.<br>\nSection: `Content / Website / Display options`",
                    "default": false
                  },
                  "zoom_level": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "description": "Zoom level of the map.<br>\nSection: `Content / Website / Display options`",
                    "default": 8,
                    "minimum": 0,
                    "maximum": 21
                  },
                  "registration_explanation": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "HTML displayed in an ‚ÄúImportant information‚Äù section at the bottom of the **registration form**.<br>\nSection: `Content / Registration process / Important information`"
                  },
                  "categories_explanation": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "HTML displayed in an ‚ÄúImportant information‚Äù section at the bottom of the **tickets** page.<br>\nSection: `Content / Registration process / Important information`"
                  },
                  "hotels_explanation": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "HTML displayed in an ‚ÄúImportant information‚Äù section at the bottom of the **hotel booking** page.<br>\nSection: `Content / Registration process / Important information`"
                  },
                  "payment_explanation": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "HTML displayed in an ‚ÄúImportant information‚Äù section at the bottom of the **check-out** page.<br>\nSection: `Content / Registration process / Important information`"
                  },
                  "show_qr_code": {
                    "type": "boolean",
                    "description": "Display QR code on the confirmation page.<br>\nSection: `Content / Registration process / Confirmation page`",
                    "default": true
                  },
                  "show_print_ticket_button": {
                    "type": "boolean",
                    "description": "Display \"Print your ticket\" button on the confirmation page.<br>\nSection: `Content / Registration process / Confirmation page`",
                    "default": true
                  },
                  "show_print_button": {
                    "type": "boolean",
                    "description": "Display \"Print summary\" button on the confirmation page.<br>\nSection: `Content / Registration process / Confirmation page`",
                    "default": true
                  },
                  "is_portal_in_confirmation_page": {
                    "type": "boolean",
                    "description": "Display ‚ÄúGo to the Attendee Hub‚Äù button on the confirmation page.<br>\nSection: `Content / Registration process / Confirmation page`",
                    "default": false
                  },
                  "is_autosending_email": {
                    "type": "boolean",
                    "description": "Send confirmation email automatically after registration.<br>\nSection: `Content / Automatic emails / Settings`",
                    "default": true
                  },
                  "is_accompanying_cc": {
                    "type": "boolean",
                    "description": "Send confirmation email to accompanying person.<br>\nSection: `Content / Automatic emails / Settings`",
                    "default": false
                  },
                  "be_bcc_email_confirmation": {
                    "type": "boolean",
                    "description": "Be in BCC of automatic emails.<br>\nSection: `Content / Automatic emails / Settings`",
                    "default": false
                  },
                  "bcc_mail_address": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "BCC email address for automatic emails.<br>\nSection: `Content / Automatic emails / Settings`<br>\n`Use semicolon to separate multiple email addresses.`<br>\n`Required if be_bcc_email_confirmation is true`",
                    "maxLength": 255
                  },
                  "custom_replyto_email_address": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "email",
                    "description": "Override profile 'Reply-to' email address for automatic emails.<br>\nSection: `Content / Automatic emails / Settings`",
                    "maxLength": 255
                  },
                  "display_cover_in_email": {
                    "type": "boolean",
                    "description": "Display cover image in the confirmation email.<br>\nSection: `Content / Automatic emails / Content`",
                    "default": true
                  },
                  "display_guest_details": {
                    "type": "boolean",
                    "description": "Display full attendee's details.<br>\nSection: `Content / Automatic emails / Content`",
                    "default": false
                  },
                  "is_address_in_email": {
                    "type": "boolean",
                    "description": "Display event location in the confirmation email.<br>\nSection: `Content / Automatic emails / Content`",
                    "default": true
                  },
                  "is_portal_in_email": {
                    "type": "boolean",
                    "description": "Display ‚ÄúGo to the Attendee Hub‚Äù button in the confirmation email.<br>\nSection: `Content / Automatic emails / Content`",
                    "default": true
                  },
                  "is_foldable_ticket_in_email": {
                    "type": "boolean",
                    "description": "Display \"Print your ticket\" button in the confirmation email.<br>\nSection: `Content / Automatic emails / Content`",
                    "default": true
                  },
                  "display_qrcode": {
                    "type": "integer",
                    "description": "Display QR code on the confirmation email.<br>\nSection: `Content / Automatic emails / Content`<br>\nAllowed values: `0 = No QR code` `1 = QR code for internal check-in system` `2 = QR code for external check-in system`",
                    "default": 1,
                    "minimum": 0,
                    "maximum": 2
                  },
                  "is_private": {
                    "type": "boolean",
                    "description": "Marking your event as \"private\" will prevent indexation in Google and listing in your catalog(s).<br>\nSection: `Content / Promotion / Website privacy`",
                    "default": false
                  },
                  "is_domain_redirection_disabled": {
                    "type": "boolean",
                    "description": "Whether the domain root redirection for this event is disabled. The event will be visible in catalog but never be the default home page.<br>\nSection: `Content / Promotion / Website privacy`",
                    "default": false
                  },
                  "meta_title": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Meta title.<br>\nSection: `Content / Promotion / Meta settings`"
                  },
                  "meta_description": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Meta description.<br>\nSection: `Content / Promotion / Meta settings`"
                  },
                  "is_descriptions_split": {
                    "type": "boolean",
                    "description": "More options: Use specific content for social networks, Attendee Hub and idloom.passport App.<br>\nSection: `Content / Promotion / Meta settings`",
                    "default": false
                  },
                  "social_media_title": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Social media title.<br>\nSection: `Content / Promotion / Meta settings`"
                  },
                  "social_media_description": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Social media description.<br>\nSection: `Content / Promotion / Meta settings`"
                  },
                  "app_description": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Attendee Hub & App description.<br>\nSection: `Content / Promotion / Meta settings`"
                  },
                  "is_email_unique": {
                    "type": "boolean",
                    "description": "Force email uniqueness.<br>\nSection: `Registration / Settings / Customize the registration process`",
                    "default": true
                  },
                  "is_captcha_active": {
                    "type": "boolean",
                    "description": "Activate captcha.<br>\nSection: `Registration / Settings / Customize the registration process`",
                    "default": true
                  },
                  "can_ask_confirmation": {
                    "type": "boolean",
                    "description": "Allow attendees to resend themselves the confirmation email.<br>\nSection: `Registration / Settings / Customize the registration process`",
                    "default": false
                  },
                  "can_edit_guest": {
                    "type": "boolean",
                    "description": "Allow attendees to modify their registration.<br>\nSection: `Registration / Settings / Customize the registration process`",
                    "default": false
                  },
                  "is_ticket_downgrade_allowed": {
                    "type": "boolean",
                    "description": "Allow ticket downgrades.<br>\nSection: `Registration / Settings / Customize the registration process`",
                    "default": false
                  },
                  "can_cancel_guest": {
                    "type": "boolean",
                    "description": "Allow attendees to cancel their registration.<br>\nSection: `Registration / Settings / Customize the registration process`",
                    "default": false
                  },
                  "can_guest_decline": {
                    "type": "boolean",
                    "description": "Allow registrants to notify that they will not attend.<br>\nSection: `Registration / Settings / Customize the registration process`",
                    "default": false
                  },
                  "restricted_registration": {
                    "type": "boolean",
                    "description": "Activate restricted registration.<br>\nSection: `Registration / Settings / Customize the registration process`",
                    "default": false
                  },
                  "restricted_modal_text": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Pop-up text for restricted registration.<br>\nSection: `Registration / Settings / Customize the registration process`"
                  },
                  "restricted_mandatory": {
                    "type": "boolean",
                    "description": "Make the restricted code mandatory for registration.<br>\nSection: `Registration / Settings / Customize the registration process`",
                    "default": false
                  },
                  "has_restricted_code": {
                    "type": "boolean",
                    "description": "Use the same restricted code for all registrants.<br>\nSection: `Registration / Settings / Customize the registration process`",
                    "default": false
                  },
                  "restricted_code": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Restricted code for all registrants.<br>\nSection: `Registration / Settings / Customize the registration process`<br>\n`Required if has_restricted_code is true`",
                    "maxLength": 255
                  },
                  "is_categories_hidden": {
                    "type": "boolean",
                    "description": "Hide the event category.<br>\nSection: `Tickets / Categories / Configure your categories`<br>\n`You cannot have more than 1 listed category to activate this feature`",
                    "default": false
                  },
                  "categories_display_name": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Categories title.<br>\nSection: `Tickets / Categories / Configure your categories`",
                    "maxLength": 100
                  },
                  "has_stock_management": {
                    "type": "boolean",
                    "description": "Activate stock management.<br>\nSection: `Tickets / Categories / Stock management`",
                    "default": false
                  },
                  "sold_out_text": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Sold-out label.<br>\nSection: `Tickets / Categories / Stock management`"
                  },
                  "show_quantities_at": {
                    "type": "integer",
                    "description": "Display remaining quantities when sold percentage reached.<br>\nSection: `Tickets / Categories / Stock management`",
                    "default": 0,
                    "minimum": 0,
                    "maximum": 100
                  },
                  "is_soldout_hidden": {
                    "type": "boolean",
                    "description": "Hide sold-out items.<br>\nSection: `Tickets / Categories / Stock management`",
                    "default": false
                  },
                  "is_waiting_list_active": {
                    "type": "boolean",
                    "description": "Activate waiting list for sold-out options.<br>\nSection: `Tickets / Categories / Stock management`",
                    "default": false
                  },
                  "use_global_quantity": {
                    "type": "boolean",
                    "description": "Use global quantity for all categories.<br>\nSection: `Tickets / Categories / Stock management`",
                    "default": false
                  },
                  "global_quantity": {
                    "type": "integer",
                    "description": "Global quantity for all categories.<br>\nSection: `Tickets / Categories / Stock management`<br>\n`Required if use_global_quantity is true`",
                    "minimum": 1
                  },
                  "options_display_name": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Options title.<br>\nSection: `Tickets / Options / Configure your options`",
                    "maxLength": 100
                  },
                  "has_location_selector": {
                    "type": "boolean",
                    "description": "Display filter by location for options on the registration page.<br>\nSection: `Tickets / Locations / Additional locations`"
                  },
                  "is_early_bird": {
                    "type": "boolean",
                    "description": "Activate early bird prices for categories and/or options.<br>\nSection: `Tickets / Discounts / Early bird`",
                    "default": false
                  },
                  "is_ticketing": {
                    "type": "boolean",
                    "description": "Allow registrants to select several of the same item.<br>\nSection: `Tickets / Settings / Ticketing`",
                    "default": false
                  },
                  "is_grouped_payment": {
                    "type": "boolean",
                    "description": "Allow several consecutive registrations by the same attendee.<br>\nSection: `Tickets / Settings / Ticketing`",
                    "default": false
                  },
                  "is_sessions_active": {
                    "type": "boolean",
                    "description": "Activate specific dates for categories and options.<br>\nSection: `Tickets / Settings / Ticketing`",
                    "default": false
                  },
                  "is_check_session_active": {
                    "type": "boolean",
                    "description": "Create a QR code for categories and/or options.<br>\nSection: `Tickets / Settings / Ticketing`",
                    "default": false
                  },
                  "autogenerate_invoices": {
                    "type": "boolean",
                    "description": "Automatically generate invoice upon registration.<br>\nSection: `Money / Settings / Invoices and credit notes`",
                    "default": false
                  },
                  "send_invoice_with_email": {
                    "type": "boolean",
                    "description": "Generate and attach invoice to confirmation email.<br>\nSection: `Money / Settings / Invoices and credit notes`",
                    "default": false
                  },
                  "enable_invoice_update": {
                    "type": "boolean",
                    "description": "Allow invoice updates.<br>\nSection: `Money / Settings / Invoices and credit notes`",
                    "default": false
                  },
                  "show_invoices_in_portal": {
                    "type": "boolean",
                    "description": "Display generated invoices and credit notes on the Attendee Hub.<br>\nSection: `Money / Settings / Invoices and credit notes`",
                    "default": false
                  },
                  "use_both_addresses": {
                    "type": "boolean",
                    "description": "If invoicing address different from company address, display both on invoice.<br>\nSection: `Money / Settings / Invoices and credit notes`",
                    "default": false
                  },
                  "is_belgian_sepa": {
                    "type": "boolean",
                    "description": "Generate Belgian SEPA structured communication.<br>\nSection: `Money / Settings / Invoices and credit notes`",
                    "default": false
                  },
                  "is_codabox_active": {
                    "type": "boolean",
                    "description": "Activate CodaBox integration.<br>\nSection: `Money / Settings / Invoices and credit notes`",
                    "default": false
                  },
                  "send_proforma_with_email": {
                    "type": "boolean",
                    "description": "Attach receipt to confirmation email.<br>\nSection: `Money / Settings / Receipts`",
                    "default": false
                  },
                  "show_proformas_in_portal": {
                    "type": "boolean",
                    "description": "Display receipts in the Attendee Hub.<br>\nSection: `Money / Settings / Receipts`",
                    "default": false
                  },
                  "use_vat": {
                    "type": "boolean",
                    "description": "Activate Tax/VAT.<br>\nSection: `Money / Settings / Tax/VAT`",
                    "default": false
                  },
                  "tax_label": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Label of the tax.<br>\nSection: `Money / Settings / Tax/VAT`",
                    "maxLength": 64
                  },
                  "is_vat_incl": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Whether the taxes are included in the event.<br>\nSection: `Money / Settings / Tax/VAT`<br>\nAllowed values: `null = No tax/VAT` `false = Tax/VAT excl.` `true = Tax/VAT incl.`",
                    "default": null
                  },
                  "tracking_code": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Tracking code.<br>\nSection: `Geeks / Analytics & tracking`"
                  },
                  "auto_config": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Automatic configuration.<br>\nSection: `Geeks / Automatic configuration`"
                  }
                },
                "required": [
                  "name",
                  "url_name",
                  "language",
                  "profile_uid",
                  "locale",
                  "location_type",
                  "country",
                  "timezone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`Event`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Event"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "An error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error overview.",
                      "example": "The event was created but the automatic configuration failed."
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "put": {
        "operationId": "events.updateEvent",
        "description": "Update en event using APIs.",
        "summary": "Update an event",
        "tags": [
          "Events"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uid": {
                    "type": "string",
                    "description": "UID of the event.<br>\nSection: `API specific`"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the event.<br>\nSection: `More actions`",
                    "enum": [
                      "Offline",
                      "Published",
                      "Registering",
                      "SoldOut",
                      "InProgress",
                      "Closed",
                      "Archived",
                      "Cancelled",
                      "Postponed"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the event.<br>\nSection: `Essentials / Basics`",
                    "maxLength": 255
                  },
                  "alias": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Alias (internal name) of the event.<br>\nSection: `Essentials / Basics`<br>\n`Must be unique`",
                    "maxLength": 255
                  },
                  "url_name": {
                    "type": "string",
                    "description": "Slug for the url of the event.<br>\nSection: `Essentials / Basics`<br>\n`Must only contain letters, numbers, dashes and underscores`<br>\n`Must be unique`",
                    "example": "my-event-unique-slug",
                    "maxLength": 100
                  },
                  "organiser": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Organiser of the event.<br>\nSection: `Essentials / Basics`",
                    "maxLength": 100
                  },
                  "is_date_unknown": {
                    "type": "boolean",
                    "description": "Whether there is an event date.<br>\nSection: `Essentials / Dates`",
                    "default": true
                  },
                  "start_date": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date",
                    "description": "Start date of the event.<br>\nSection: `Essentials / Dates`<br>\nThe format depends on `is_all_day`.<br>\n`Must be in YYYY-MM-DDThh:mm:ss¬±hh:mm, YYYY-MM-DD hh:mm:ss or YYYY-MM-DD format`<br>\n`Required if is_date_unknown is false`",
                    "example": "2022-10-25 08:05:04"
                  },
                  "end_date": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date",
                    "description": "End date of the event.<br>\nSection: `Essentials / Dates`<br>\nThe format depends on `is_all_day`.<br>\n`Must be in YYYY-MM-DDThh:mm:ss¬±hh:mm, YYYY-MM-DD hh:mm:ss or YYYY-MM-DD format`<br>\n`Required if is_date_unknown is false`",
                    "example": "2022-10-25 08:05:04"
                  },
                  "is_all_day": {
                    "type": "boolean",
                    "description": "Whether this is an all day event.<br>\nSection: `Essentials / Dates`"
                  },
                  "has_registering_period": {
                    "type": "boolean",
                    "description": "Whether the event has a registration period.\nSection: `Essentials / Dates`"
                  },
                  "reg_start_date": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date",
                    "description": "Registration start date.<br>\nSection: `Essentials / Dates`<br>\n`Must be in YYYY-MM-DDThh:mm:ss¬±hh:mm, YYYY-MM-DD hh:mm:ss format`<br>\n`Required if has_registering_period is true`",
                    "example": "2022-10-25 08:05:04"
                  },
                  "reg_end_date": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date",
                    "description": "Registration end date.<br>\nSection: `Essentials / Dates`<br>\n`Must be in YYYY-MM-DDThh:mm:ss¬±hh:mm, YYYY-MM-DD hh:mm:ss format`<br>\n`Required if has_registering_period is true`",
                    "example": "2022-10-25 08:05:04"
                  },
                  "has_notify_me": {
                    "type": "boolean",
                    "description": "Collect \"Notify me\" prospects prior to registering period.<br>\nSection: `Essentials / Dates`"
                  },
                  "locale": {
                    "type": "string",
                    "description": "Locale (Regional settings) of the event.<br>\nSection: `Essentials / Regional settings`",
                    "enum": [
                      "af",
                      "af_NA",
                      "af_ZA",
                      "ak",
                      "ak_GH",
                      "sq",
                      "sq_AL",
                      "sq_MK",
                      "am",
                      "am_ET",
                      "ar",
                      "ar_DZ",
                      "ar_BH",
                      "ar_TD",
                      "ar_KM",
                      "ar_DJ",
                      "ar_EG",
                      "ar_ER",
                      "ar_IQ",
                      "ar_IL",
                      "ar_JO",
                      "ar_KW",
                      "ar_LB",
                      "ar_LY",
                      "ar_MR",
                      "ar_MA",
                      "ar_OM",
                      "ar_PS",
                      "ar_QA",
                      "ar_SA",
                      "ar_SO",
                      "ar_SS",
                      "ar_SD",
                      "ar_SY",
                      "ar_TN",
                      "ar_AE",
                      "ar_EH",
                      "ar_001",
                      "ar_YE",
                      "hy",
                      "hy_AM",
                      "as",
                      "as_IN",
                      "az",
                      "az_AZ",
                      "az_Cyrl_AZ",
                      "az_Cyrl",
                      "az_Latn_AZ",
                      "az_Latn",
                      "bm",
                      "bm_ML",
                      "bn",
                      "bn_BD",
                      "bn_IN",
                      "eu",
                      "eu_ES",
                      "be",
                      "be_BY",
                      "bs",
                      "bs_BA",
                      "bs_Cyrl_BA",
                      "bs_Cyrl",
                      "bs_Latn_BA",
                      "bs_Latn",
                      "br",
                      "br_FR",
                      "bg",
                      "bg_BG",
                      "my",
                      "my_MM",
                      "ca",
                      "ca_AD",
                      "ca_FR",
                      "ca_IT",
                      "ca_ES",
                      "ce",
                      "ce_RU",
                      "zh",
                      "zh_CN",
                      "zh_HK",
                      "zh_MO",
                      "zh_Hans_CN",
                      "zh_Hans_HK",
                      "zh_Hans_MO",
                      "zh_Hans_MY",
                      "zh_Hans_SG",
                      "zh_Hans",
                      "zh_SG",
                      "zh_TW",
                      "zh_Hant_HK",
                      "zh_Hant_MO",
                      "zh_Hant_MY",
                      "zh_Hant_TW",
                      "zh_Hant",
                      "cv",
                      "cv_RU",
                      "kw",
                      "kw_GB",
                      "hr",
                      "hr_BA",
                      "hr_HR",
                      "cs",
                      "cs_CZ",
                      "da",
                      "da_DK",
                      "da_GL",
                      "nl",
                      "nl_AW",
                      "nl_BE",
                      "nl_BQ",
                      "nl_CW",
                      "nl_NL",
                      "nl_SX",
                      "nl_SR",
                      "dz",
                      "dz_BT",
                      "en",
                      "en_AS",
                      "en_AI",
                      "en_AG",
                      "en_AU",
                      "en_AT",
                      "en_BS",
                      "en_BB",
                      "en_BE",
                      "en_BZ",
                      "en_BM",
                      "en_BW",
                      "en_IO",
                      "en_VG",
                      "en_BI",
                      "en_CM",
                      "en_CA",
                      "en_KY",
                      "en_CX",
                      "en_CC",
                      "en_CK",
                      "en_CY",
                      "en_CZ",
                      "en_DK",
                      "en_DM",
                      "en_ER",
                      "en_SZ",
                      "en_150",
                      "en_FK",
                      "en_FJ",
                      "en_FI",
                      "en_FR",
                      "en_GM",
                      "en_DE",
                      "en_GH",
                      "en_GI",
                      "en_GD",
                      "en_GU",
                      "en_GG",
                      "en_GY",
                      "en_HK",
                      "en_HU",
                      "en_IN",
                      "en_ID",
                      "en_IE",
                      "en_IM",
                      "en_IL",
                      "en_IT",
                      "en_JM",
                      "en_JE",
                      "en_KE",
                      "en_KI",
                      "en_LS",
                      "en_LR",
                      "en_MO",
                      "en_MG",
                      "en_MW",
                      "en_MY",
                      "en_MV",
                      "en_MT",
                      "en_MH",
                      "en_MU",
                      "en_FM",
                      "en_MS",
                      "en_NA",
                      "en_NR",
                      "en_NL",
                      "en_NZ",
                      "en_NG",
                      "en_NU",
                      "en_NF",
                      "en_MP",
                      "en_NO",
                      "en_PK",
                      "en_PW",
                      "en_PG",
                      "en_PH",
                      "en_PN",
                      "en_PL",
                      "en_PT",
                      "en_PR",
                      "en_RO",
                      "en_RW",
                      "en_WS",
                      "en_SC",
                      "en_SL",
                      "en_SG",
                      "en_SX",
                      "en_SK",
                      "en_SI",
                      "en_SB",
                      "en_ZA",
                      "en_GS",
                      "en_SS",
                      "en_ES",
                      "en_SH",
                      "en_KN",
                      "en_LC",
                      "en_VC",
                      "en_SD",
                      "en_SE",
                      "en_CH",
                      "en_TZ",
                      "en_TK",
                      "en_TO",
                      "en_TT",
                      "en_TC",
                      "en_TV",
                      "en_UM",
                      "en_VI",
                      "en_UG",
                      "en_AE",
                      "en_GB",
                      "en_US",
                      "en_VU",
                      "en_001",
                      "en_ZM",
                      "en_ZW",
                      "eo",
                      "eo_001",
                      "et",
                      "et_EE",
                      "ee",
                      "ee_GH",
                      "ee_TG",
                      "fo",
                      "fo_DK",
                      "fo_FO",
                      "fi",
                      "fi_FI",
                      "fr",
                      "fr_DZ",
                      "fr_BE",
                      "fr_BJ",
                      "fr_BF",
                      "fr_BI",
                      "fr_CM",
                      "fr_CA",
                      "fr_CF",
                      "fr_TD",
                      "fr_KM",
                      "fr_CG",
                      "fr_CD",
                      "fr_CI",
                      "fr_DJ",
                      "fr_GQ",
                      "fr_FR",
                      "fr_GF",
                      "fr_PF",
                      "fr_GA",
                      "fr_GP",
                      "fr_GN",
                      "fr_HT",
                      "fr_LU",
                      "fr_MG",
                      "fr_ML",
                      "fr_MQ",
                      "fr_MR",
                      "fr_MU",
                      "fr_YT",
                      "fr_MC",
                      "fr_MA",
                      "fr_NC",
                      "fr_NE",
                      "fr_RE",
                      "fr_RW",
                      "fr_SN",
                      "fr_SC",
                      "fr_BL",
                      "fr_MF",
                      "fr_PM",
                      "fr_CH",
                      "fr_SY",
                      "fr_TG",
                      "fr_TN",
                      "fr_VU",
                      "fr_WF",
                      "ff",
                      "ff_Adlm_BF",
                      "ff_Adlm_CM",
                      "ff_Adlm_GM",
                      "ff_Adlm_GH",
                      "ff_Adlm_GW",
                      "ff_Adlm_GN",
                      "ff_Adlm_LR",
                      "ff_Adlm_MR",
                      "ff_Adlm_NE",
                      "ff_Adlm_NG",
                      "ff_Adlm_SN",
                      "ff_Adlm_SL",
                      "ff_Adlm",
                      "ff_CM",
                      "ff_GN",
                      "ff_Latn_BF",
                      "ff_Latn_CM",
                      "ff_Latn_GM",
                      "ff_Latn_GH",
                      "ff_Latn_GW",
                      "ff_Latn_GN",
                      "ff_Latn_LR",
                      "ff_Latn_MR",
                      "ff_Latn_NE",
                      "ff_Latn_NG",
                      "ff_Latn_SN",
                      "ff_Latn_SL",
                      "ff_Latn",
                      "ff_MR",
                      "ff_SN",
                      "gl",
                      "gl_ES",
                      "lg",
                      "lg_UG",
                      "ka",
                      "ka_GE",
                      "de",
                      "de_AT",
                      "de_BE",
                      "de_DE",
                      "de_IT",
                      "de_LI",
                      "de_LU",
                      "de_CH",
                      "el",
                      "el_CY",
                      "el_GR",
                      "gu",
                      "gu_IN",
                      "ha",
                      "ha_GH",
                      "ha_NE",
                      "ha_NG",
                      "he",
                      "he_IL",
                      "hi",
                      "hi_IN",
                      "hi_Latn_IN",
                      "hi_Latn",
                      "hu",
                      "hu_HU",
                      "is",
                      "is_IS",
                      "ig",
                      "ig_NG",
                      "id",
                      "id_ID",
                      "ia",
                      "ia_001",
                      "ie",
                      "ie_EE",
                      "ga",
                      "ga_IE",
                      "ga_GB",
                      "it",
                      "it_IT",
                      "it_SM",
                      "it_CH",
                      "it_VA",
                      "ja",
                      "ja_JP",
                      "jv",
                      "jv_ID",
                      "kl",
                      "kl_GL",
                      "kn",
                      "kn_IN",
                      "ks",
                      "ks_Arab_IN",
                      "ks_Arab",
                      "ks_Deva_IN",
                      "ks_Deva",
                      "ks_IN",
                      "kk",
                      "kk_Cyrl_KZ",
                      "kk_Cyrl",
                      "kk_KZ",
                      "km",
                      "km_KH",
                      "ki",
                      "ki_KE",
                      "rw",
                      "rw_RW",
                      "ko",
                      "ko_CN",
                      "ko_KP",
                      "ko_KR",
                      "ku",
                      "ku_TR",
                      "ky",
                      "ky_KG",
                      "lo",
                      "lo_LA",
                      "lv",
                      "lv_LV",
                      "ln",
                      "ln_AO",
                      "ln_CF",
                      "ln_CG",
                      "ln_CD",
                      "lt",
                      "lt_LT",
                      "lu",
                      "lu_CD",
                      "lb",
                      "lb_LU",
                      "mk",
                      "mk_MK",
                      "mg",
                      "mg_MG",
                      "ms",
                      "ms_BN",
                      "ms_ID",
                      "ms_MY",
                      "ms_SG",
                      "ml",
                      "ml_IN",
                      "mt",
                      "mt_MT",
                      "gv",
                      "gv_IM",
                      "mi",
                      "mi_NZ",
                      "mr",
                      "mr_IN",
                      "mn",
                      "mn_MN",
                      "ne",
                      "ne_IN",
                      "ne_NP",
                      "nd",
                      "nd_ZW",
                      "se",
                      "se_FI",
                      "se_NO",
                      "se_SE",
                      "no",
                      "no_NO",
                      "nb",
                      "nb_NO",
                      "nb_SJ",
                      "nn",
                      "nn_NO",
                      "oc",
                      "oc_FR",
                      "oc_ES",
                      "or",
                      "or_IN",
                      "om",
                      "om_ET",
                      "om_KE",
                      "os",
                      "os_GE",
                      "os_RU",
                      "ps",
                      "ps_AF",
                      "ps_PK",
                      "fa",
                      "fa_AF",
                      "fa_IR",
                      "pl",
                      "pl_PL",
                      "pt",
                      "pt_AO",
                      "pt_BR",
                      "pt_CV",
                      "pt_GQ",
                      "pt_GW",
                      "pt_LU",
                      "pt_MO",
                      "pt_MZ",
                      "pt_PT",
                      "pt_ST",
                      "pt_CH",
                      "pt_TL",
                      "pa",
                      "pa_Arab_PK",
                      "pa_Arab",
                      "pa_Guru_IN",
                      "pa_Guru",
                      "pa_IN",
                      "pa_PK",
                      "qu",
                      "qu_BO",
                      "qu_EC",
                      "qu_PE",
                      "ro",
                      "ro_MD",
                      "ro_RO",
                      "rm",
                      "rm_CH",
                      "rn",
                      "rn_BI",
                      "ru",
                      "ru_BY",
                      "ru_KZ",
                      "ru_KG",
                      "ru_MD",
                      "ru_RU",
                      "ru_UA",
                      "sg",
                      "sg_CF",
                      "sa",
                      "sa_IN",
                      "sc",
                      "sc_IT",
                      "gd",
                      "gd_GB",
                      "sr",
                      "sr_BA",
                      "sr_Cyrl_BA",
                      "sr_Cyrl_ME",
                      "sr_Cyrl_RS",
                      "sr_Cyrl",
                      "sr_Latn_BA",
                      "sr_Latn_ME",
                      "sr_Latn_RS",
                      "sr_Latn",
                      "sr_ME",
                      "sr_RS",
                      "sh",
                      "sh_BA",
                      "sn",
                      "sn_ZW",
                      "ii",
                      "ii_CN",
                      "sd",
                      "sd_Arab_PK",
                      "sd_Arab",
                      "sd_Deva_IN",
                      "sd_Deva",
                      "sd_IN",
                      "sd_PK",
                      "si",
                      "si_LK",
                      "sk",
                      "sk_SK",
                      "sl",
                      "sl_SI",
                      "so",
                      "so_DJ",
                      "so_ET",
                      "so_KE",
                      "so_SO",
                      "st",
                      "st_LS",
                      "st_ZA",
                      "es",
                      "es_AR",
                      "es_BZ",
                      "es_BO",
                      "es_BR",
                      "es_CL",
                      "es_CO",
                      "es_CR",
                      "es_CU",
                      "es_DO",
                      "es_EC",
                      "es_SV",
                      "es_GQ",
                      "es_GT",
                      "es_HN",
                      "es_419",
                      "es_MX",
                      "es_NI",
                      "es_PA",
                      "es_PY",
                      "es_PE",
                      "es_PH",
                      "es_PR",
                      "es_ES",
                      "es_US",
                      "es_UY",
                      "es_VE",
                      "su",
                      "su_ID",
                      "su_Latn_ID",
                      "su_Latn",
                      "sw",
                      "sw_CD",
                      "sw_KE",
                      "sw_TZ",
                      "sw_UG",
                      "sv",
                      "sv_AX",
                      "sv_FI",
                      "sv_SE",
                      "tl",
                      "tl_PH",
                      "tg",
                      "tg_TJ",
                      "ta",
                      "ta_IN",
                      "ta_MY",
                      "ta_SG",
                      "ta_LK",
                      "tt",
                      "tt_RU",
                      "te",
                      "te_IN",
                      "th",
                      "th_TH",
                      "bo",
                      "bo_CN",
                      "bo_IN",
                      "ti",
                      "ti_ER",
                      "ti_ET",
                      "to",
                      "to_TO",
                      "tn",
                      "tn_BW",
                      "tn_ZA",
                      "tr",
                      "tr_CY",
                      "tr_TR",
                      "tk",
                      "tk_TM",
                      "uk",
                      "uk_UA",
                      "ur",
                      "ur_IN",
                      "ur_PK",
                      "ug",
                      "ug_CN",
                      "uz",
                      "uz_AF",
                      "uz_Arab_AF",
                      "uz_Arab",
                      "uz_Cyrl_UZ",
                      "uz_Cyrl",
                      "uz_Latn_UZ",
                      "uz_Latn",
                      "uz_UZ",
                      "vi",
                      "vi_VN",
                      "cy",
                      "cy_GB",
                      "fy",
                      "fy_NL",
                      "wo",
                      "wo_SN",
                      "xh",
                      "xh_ZA",
                      "yi",
                      "yi_UA",
                      "yo",
                      "yo_BJ",
                      "yo_NG",
                      "za",
                      "za_CN",
                      "zu",
                      "zu_ZA"
                    ]
                  },
                  "location_type": {
                    "type": "string",
                    "description": "Type of event location.<br>\nSection: `Essentials / Main location`",
                    "enum": [
                      "offline",
                      "online"
                    ]
                  },
                  "location": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Location name.<br>\nSection: `Essentials / Main location`<br>\n`Required if location_type is online`",
                    "maxLength": 512
                  },
                  "street": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Street name.<br>\nSection: `Essentials / Main location`",
                    "maxLength": 100
                  },
                  "street_number": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Street Number.<br>\nSection: `Essentials / Main location`",
                    "maxLength": 20
                  },
                  "street_box": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Box.<br>\nSection: `Essentials / Main location`",
                    "maxLength": 20
                  },
                  "zip_code": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Post code.<br>\nSection: `Essentials / Main location`",
                    "maxLength": 20
                  },
                  "city": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "City.<br>\nSection: `Essentials / Main location`",
                    "maxLength": 100
                  },
                  "state": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "State.<br>\nSection: `Essentials / Main location`",
                    "maxLength": 100
                  },
                  "country": {
                    "type": "string",
                    "description": "Country.<br>\nSection: `Essentials / Main location`<br>\n`Must be a valid ISO 3166 alpha-2 country code`",
                    "enum": [
                      "AD",
                      "AE",
                      "AF",
                      "AG",
                      "AI",
                      "AL",
                      "AM",
                      "AO",
                      "AQ",
                      "AR",
                      "AS",
                      "AT",
                      "AU",
                      "AW",
                      "AX",
                      "AZ",
                      "BA",
                      "BB",
                      "BD",
                      "BE",
                      "BF",
                      "BG",
                      "BH",
                      "BI",
                      "BJ",
                      "BL",
                      "BM",
                      "BN",
                      "BO",
                      "BQ",
                      "BR",
                      "BS",
                      "BT",
                      "BV",
                      "BW",
                      "BY",
                      "BZ",
                      "CA",
                      "CC",
                      "CD",
                      "CF",
                      "CG",
                      "CH",
                      "CI",
                      "CK",
                      "CL",
                      "CM",
                      "CN",
                      "CO",
                      "CR",
                      "CU",
                      "CV",
                      "CW",
                      "CX",
                      "CY",
                      "CZ",
                      "DE",
                      "DJ",
                      "DK",
                      "DM",
                      "DO",
                      "DZ",
                      "EC",
                      "EE",
                      "EG",
                      "EH",
                      "ER",
                      "ES",
                      "ET",
                      "FI",
                      "FJ",
                      "FK",
                      "FM",
                      "FO",
                      "FR",
                      "GA",
                      "GB",
                      "GD",
                      "GE",
                      "GF",
                      "GG",
                      "GH",
                      "GI",
                      "GL",
                      "GM",
                      "GN",
                      "GP",
                      "GQ",
                      "GR",
                      "GS",
                      "GT",
                      "GU",
                      "GW",
                      "GY",
                      "HK",
                      "HM",
                      "HN",
                      "HR",
                      "HT",
                      "HU",
                      "ID",
                      "IE",
                      "IL",
                      "IM",
                      "IN",
                      "IO",
                      "IQ",
                      "IR",
                      "IS",
                      "IT",
                      "JE",
                      "JM",
                      "JO",
                      "JP",
                      "KE",
                      "KG",
                      "KH",
                      "KI",
                      "KM",
                      "KN",
                      "KP",
                      "KR",
                      "KW",
                      "KY",
                      "KZ",
                      "LA",
                      "LB",
                      "LC",
                      "LI",
                      "LK",
                      "LR",
                      "LS",
                      "LT",
                      "LU",
                      "LV",
                      "LY",
                      "MA",
                      "MC",
                      "MD",
                      "ME",
                      "MF",
                      "MG",
                      "MH",
                      "MK",
                      "ML",
                      "MM",
                      "MN",
                      "MO",
                      "MP",
                      "MQ",
                      "MR",
                      "MS",
                      "MT",
                      "MU",
                      "MV",
                      "MW",
                      "MX",
                      "MY",
                      "MZ",
                      "NA",
                      "NC",
                      "NE",
                      "NF",
                      "NG",
                      "NI",
                      "NL",
                      "NO",
                      "NP",
                      "NR",
                      "NU",
                      "NZ",
                      "OM",
                      "PA",
                      "PE",
                      "PF",
                      "PG",
                      "PH",
                      "PK",
                      "PL",
                      "PM",
                      "PN",
                      "PR",
                      "PS",
                      "PT",
                      "PW",
                      "PY",
                      "QA",
                      "RE",
                      "RO",
                      "RS",
                      "RU",
                      "RW",
                      "SA",
                      "SB",
                      "SC",
                      "SD",
                      "SE",
                      "SG",
                      "SH",
                      "SI",
                      "SJ",
                      "SK",
                      "SL",
                      "SM",
                      "SN",
                      "SO",
                      "SR",
                      "SS",
                      "ST",
                      "SV",
                      "SX",
                      "SY",
                      "SZ",
                      "TC",
                      "TD",
                      "TF",
                      "TG",
                      "TH",
                      "TJ",
                      "TK",
                      "TL",
                      "TM",
                      "TN",
                      "TO",
                      "TR",
                      "TT",
                      "TV",
                      "TW",
                      "TZ",
                      "UA",
                      "UG",
                      "UM",
                      "US",
                      "UY",
                      "UZ",
                      "VA",
                      "VC",
                      "VE",
                      "VG",
                      "VI",
                      "VN",
                      "VU",
                      "WF",
                      "WS",
                      "YE",
                      "YT",
                      "ZA",
                      "ZM",
                      "ZW"
                    ]
                  },
                  "latitude": {
                    "type": [
                      "number",
                      "null"
                    ],
                    "description": "Latitude.<br>\nSection: `Essentials / Main location`",
                    "example": 50.7116005
                  },
                  "longitude": {
                    "type": [
                      "number",
                      "null"
                    ],
                    "description": "Longitude.<br>\nSection: `Essentials / Main location`",
                    "example": 4.3292619
                  },
                  "timezone": {
                    "type": "string",
                    "description": "Timezone of the event location.<br>\nSection: `Essentials / Main location`",
                    "example": "Europe/Brussels",
                    "maxLength": 32
                  },
                  "is_free": {
                    "type": "boolean",
                    "description": "Whether the event is free or paid.<br>\nSection: `Essentials / Pricing plan`<br>\n`Locked When Guests Are Registered`"
                  },
                  "currency": {
                    "type": "string",
                    "description": "Currency of the event.<br>\nSection: `Essentials / Pricing plan`<br>\n`Must be a valid ISO 4217 currency code`<br>\n`Locked When Guests Are Registered`<br>\n`Required if is_free is false`",
                    "enum": [
                      "AFN",
                      "ALL",
                      "DZD",
                      "AOA",
                      "ARS",
                      "AMD",
                      "AWG",
                      "AUD",
                      "AZN",
                      "BSD",
                      "BHD",
                      "BDT",
                      "BBD",
                      "BYN",
                      "BZD",
                      "BMD",
                      "BTN",
                      "VED",
                      "BOB",
                      "BAM",
                      "BWP",
                      "BRL",
                      "GBP",
                      "BND",
                      "BGN",
                      "BIF",
                      "KHR",
                      "CAD",
                      "CVE",
                      "XCG",
                      "KYD",
                      "XAF",
                      "XPF",
                      "CLP",
                      "CNY",
                      "COP",
                      "KMF",
                      "CDF",
                      "CRC",
                      "CUP",
                      "CZK",
                      "DKK",
                      "DJF",
                      "DOP",
                      "XCD",
                      "EGP",
                      "ERN",
                      "ETB",
                      "EUR",
                      "FKP",
                      "FJD",
                      "GMD",
                      "GEL",
                      "GHS",
                      "GIP",
                      "GTQ",
                      "GNF",
                      "GYD",
                      "HTG",
                      "HNL",
                      "HKD",
                      "HUF",
                      "ISK",
                      "INR",
                      "IDR",
                      "IRR",
                      "IQD",
                      "ILS",
                      "JMD",
                      "JPY",
                      "JOD",
                      "KZT",
                      "KES",
                      "KWD",
                      "KGS",
                      "LAK",
                      "LBP",
                      "LSL",
                      "LRD",
                      "LYD",
                      "MOP",
                      "MKD",
                      "MGA",
                      "MWK",
                      "MYR",
                      "MVR",
                      "MRU",
                      "MUR",
                      "MXN",
                      "MDL",
                      "MNT",
                      "MAD",
                      "MZN",
                      "MMK",
                      "NAD",
                      "NPR",
                      "TWD",
                      "NZD",
                      "NIO",
                      "NGN",
                      "KPW",
                      "NOK",
                      "OMR",
                      "PKR",
                      "PAB",
                      "PGK",
                      "PYG",
                      "PEN",
                      "PHP",
                      "PLN",
                      "QAR",
                      "RON",
                      "RUB",
                      "RWF",
                      "SVC",
                      "WST",
                      "STN",
                      "SAR",
                      "RSD",
                      "SCR",
                      "SLE",
                      "SGD",
                      "SBD",
                      "SOS",
                      "ZAR",
                      "KRW",
                      "SSP",
                      "LKR",
                      "SHP",
                      "SDG",
                      "SRD",
                      "SZL",
                      "SEK",
                      "CHF",
                      "SYP",
                      "TJS",
                      "TZS",
                      "THB",
                      "TOP",
                      "TTD",
                      "TND",
                      "TRY",
                      "TMT",
                      "UGX",
                      "UAH",
                      "AED",
                      "UYW",
                      "UYU",
                      "USD",
                      "UZS",
                      "VUV",
                      "VES",
                      "VND",
                      "XOF",
                      "YER",
                      "ZMW",
                      "ZWG"
                    ]
                  },
                  "is_first_steps_inverted": {
                    "type": "boolean",
                    "description": "Whether to invert the two first registration steps: Category and options first.<br>\nSection: `Essentials / Registration flow`"
                  },
                  "skip_step2": {
                    "type": "boolean",
                    "description": "Whether to skip the second registration step: Category and options.<br>\nSection: `Essentials / Registration flow`"
                  },
                  "skip_step3": {
                    "type": "boolean",
                    "description": "Whether to skip the third registration step: Hotels.<br>\nSection: `Essentials / Registration flow`"
                  },
                  "skip_step4": {
                    "type": "boolean",
                    "description": "Whether to skip the fourth registration step: Checkout.<br>\nSection: `Essentials / Registration flow`"
                  },
                  "display_title_on_img": {
                    "type": "integer",
                    "description": "How to display the title on the cover image.<br>\nSection: `Content / Website / Homepage`<br>\nAllowed values: `0 = Underneath cover image` `1 = Over cover image` `2 = No title`",
                    "minimum": 0,
                    "maximum": 2
                  },
                  "description": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "HTML Description of the event.<br>\nSection: `Content / Website / Homepage`"
                  },
                  "display_share": {
                    "type": "boolean",
                    "description": "Display social networks share icons on the event page.<br>\nSection: `Content / Website / Display options`"
                  },
                  "is_address_hidden": {
                    "type": "boolean",
                    "description": "Whether the event location is hidden from the homepage, the check-out page and the confirmation email.<br>\nSection: `Content / Website / Display options`"
                  },
                  "zoom_level": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "description": "Zoom level of the map.<br>\nSection: `Content / Website / Display options`",
                    "minimum": 0,
                    "maximum": 21
                  },
                  "registration_explanation": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Text displayed in an ‚ÄúImportant information‚Äù section at the bottom of the **registration form**.<br>\nSection: `Content / Registration process / Important information`"
                  },
                  "categories_explanation": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Text displayed in an ‚ÄúImportant information‚Äù section at the bottom of the **tickets** page.<br>\nSection: `Content / Registration process / Important information`"
                  },
                  "hotels_explanation": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Text displayed in an ‚ÄúImportant information‚Äù section at the bottom of the **hotel booking** page.<br>\nSection: `Content / Registration process / Important information`"
                  },
                  "payment_explanation": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Text displayed in an ‚ÄúImportant information‚Äù section at the bottom of the **check-out** page.<br>\nSection: `Content / Registration process / Important information`"
                  },
                  "show_qr_code": {
                    "type": "boolean",
                    "description": "Display QR code on the confirmation page.<br>\nSection: `Content / Registration process / Confirmation page`"
                  },
                  "show_print_ticket_button": {
                    "type": "boolean",
                    "description": "Display \"Print your ticket\" button on the confirmation page.<br>\nSection: `Content / Registration process / Confirmation page`"
                  },
                  "show_print_button": {
                    "type": "boolean",
                    "description": "Display \"Print summary\" button on the confirmation page.<br>\nSection: `Content / Registration process / Confirmation page`"
                  },
                  "is_portal_in_confirmation_page": {
                    "type": "boolean",
                    "description": "Display ‚ÄúGo to the Attendee Hub‚Äù button on the confirmation page.<br>\nSection: `Content / Registration process / Confirmation page`"
                  },
                  "is_autosending_email": {
                    "type": "boolean",
                    "description": "Send confirmation email automatically after registration.<br>\nSection: `Content / Automatic emails / Settings`"
                  },
                  "is_accompanying_cc": {
                    "type": "boolean",
                    "description": "Send confirmation email to accompanying person.<br>\nSection: `Content / Automatic emails / Settings`"
                  },
                  "be_bcc_email_confirmation": {
                    "type": "boolean",
                    "description": "Be in BCC of automatic emails.<br>\nSection: `Content / Automatic emails / Settings`"
                  },
                  "bcc_mail_address": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "BCC email address for automatic emails.<br>\nSection: `Content / Automatic emails / Settings`<br>\n`Use semicolon to separate multiple email addresses.`<br>\n`Required if be_bcc_email_confirmation is true`",
                    "maxLength": 255
                  },
                  "custom_replyto_email_address": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "email",
                    "description": "Override profile 'Reply-to' email address for automatic emails.<br>\nSection: `Content / Automatic emails / Settings`",
                    "maxLength": 255
                  },
                  "display_cover_in_email": {
                    "type": "boolean",
                    "description": "Display cover image in the confirmation email.<br>\nSection: `Content / Automatic emails / Content`"
                  },
                  "display_guest_details": {
                    "type": "boolean",
                    "description": "Display full attendee's details.<br>\nSection: `Content / Automatic emails / Content`"
                  },
                  "is_address_in_email": {
                    "type": "boolean",
                    "description": "Display event location in the confirmation email.<br>\nSection: `Content / Automatic emails / Content`"
                  },
                  "is_portal_in_email": {
                    "type": "boolean",
                    "description": "Display ‚ÄúGo to the Attendee Hub‚Äù button in the confirmation email.<br>\nSection: `Content / Automatic emails / Content`"
                  },
                  "is_foldable_ticket_in_email": {
                    "type": "boolean",
                    "description": "Display \"Print your ticket\" button in the confirmation email.<br>\nSection: `Content / Automatic emails / Content`"
                  },
                  "display_qrcode": {
                    "type": "integer",
                    "description": "Display QR code on the confirmation email.<br>\nSection: `Content / Automatic emails / Content`<br>\nAllowed values: `0 = No QR code` `1 = QR code for internal check-in system` `2 = QR code for external check-in system`",
                    "minimum": 0,
                    "maximum": 2
                  },
                  "is_private": {
                    "type": "boolean",
                    "description": "Marking your event as \"private\" will prevent indexation in Google and listing in your catalog(s).<br>\nSection: `Content / Promotion / Website privacy`"
                  },
                  "is_domain_redirection_disabled": {
                    "type": "boolean",
                    "description": "Whether the domain root redirection for this event is disabled. The event will be visible in catalog but never be the default home page.<br>\nSection: `Content / Promotion / Website privacy`"
                  },
                  "meta_title": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Meta title.<br>\nSection: `Content / Promotion / Meta settings`"
                  },
                  "meta_description": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Meta description.<br>\nSection: `Content / Promotion / Meta settings`"
                  },
                  "is_descriptions_split": {
                    "type": "boolean",
                    "description": "More options: Use specific content for social networks, Attendee Hub and idloom.passport App.<br>\nSection: `Content / Promotion / Meta settings`"
                  },
                  "social_media_title": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Social media title.<br>\nSection: `Content / Promotion / Meta settings`"
                  },
                  "social_media_description": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Social media description.<br>\nSection: `Content / Promotion / Meta settings`"
                  },
                  "app_description": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Attendee Hub & App description.<br>\nSection: `Content / Promotion / Meta settings`"
                  },
                  "is_email_unique": {
                    "type": "boolean",
                    "description": "Force email uniqueness.<br>\nSection: `Registration / Settings / Customize the registration process`"
                  },
                  "is_captcha_active": {
                    "type": "boolean",
                    "description": "Activate captcha.<br>\nSection: `Registration / Settings / Customize the registration process`"
                  },
                  "can_ask_confirmation": {
                    "type": "boolean",
                    "description": "Allow attendees to resend themselves the confirmation email.<br>\nSection: `Registration / Settings / Customize the registration process`"
                  },
                  "can_edit_guest": {
                    "type": "boolean",
                    "description": "Allow attendees to modify their registration.<br>\nSection: `Registration / Settings / Customize the registration process`"
                  },
                  "is_ticket_downgrade_allowed": {
                    "type": "boolean",
                    "description": "Allow ticket downgrades.<br>\nSection: `Registration / Settings / Customize the registration process`"
                  },
                  "can_cancel_guest": {
                    "type": "boolean",
                    "description": "Allow attendees to cancel their registration.<br>\nSection: `Registration / Settings / Customize the registration process`"
                  },
                  "can_guest_decline": {
                    "type": "boolean",
                    "description": "Allow registrants to notify that they will not attend.<br>\nSection: `Registration / Settings / Customize the registration process`"
                  },
                  "restricted_registration": {
                    "type": "boolean",
                    "description": "Activate restricted registration.<br>\nSection: `Registration / Settings / Customize the registration process`"
                  },
                  "restricted_modal_text": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Pop-up text for restricted registration.<br>\nSection: `Registration / Settings / Customize the registration process`"
                  },
                  "restricted_mandatory": {
                    "type": "boolean",
                    "description": "Make the restricted code mandatory for registration.<br>\nSection: `Registration / Settings / Customize the registration process`"
                  },
                  "has_restricted_code": {
                    "type": "boolean",
                    "description": "Use the same restricted code for all registrants.<br>\nSection: `Registration / Settings / Customize the registration process`"
                  },
                  "restricted_code": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Restricted code for all registrants.<br>\nSection: `Registration / Settings / Customize the registration process`<br>\n`Required if has_restricted_code is true`",
                    "maxLength": 255
                  },
                  "is_categories_hidden": {
                    "type": "boolean",
                    "description": "Hide the event category.<br>\nSection: `Tickets / Categories / Configure your categories`<br>\n`You cannot have more than 1 listed category to activate this feature`"
                  },
                  "categories_display_name": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Categories title.<br>\nSection: `Tickets / Categories / Configure your categories`",
                    "maxLength": 100
                  },
                  "has_stock_management": {
                    "type": "boolean",
                    "description": "Activate stock management.<br>\nSection: `Tickets / Categories / Stock management`"
                  },
                  "sold_out_text": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Sold-out label.<br>\nSection: `Tickets / Categories / Stock management`"
                  },
                  "show_quantities_at": {
                    "type": "integer",
                    "description": "Display remaining quantities when sold percentage reached.<br>\nSection: `Tickets / Categories / Stock management`",
                    "minimum": 0,
                    "maximum": 100
                  },
                  "is_soldout_hidden": {
                    "type": "boolean",
                    "description": "Hide sold-out items.<br>\nSection: `Tickets / Categories / Stock management`"
                  },
                  "is_waiting_list_active": {
                    "type": "boolean",
                    "description": "Activate waiting list for sold-out options.<br>\nSection: `Tickets / Categories / Stock management`"
                  },
                  "use_global_quantity": {
                    "type": "boolean",
                    "description": "Use global quantity for all categories.<br>\nSection: `Tickets / Categories / Stock management`"
                  },
                  "global_quantity": {
                    "type": "integer",
                    "description": "Global quantity for all categories.<br>\nSection: `Tickets / Categories / Stock management`<br>\n`Required if use_global_quantity is true`",
                    "minimum": 1
                  },
                  "options_display_name": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Options title.<br>\nSection: `Tickets / Options / Configure your options`",
                    "maxLength": 100
                  },
                  "has_location_selector": {
                    "type": "boolean",
                    "description": "Display filter by location for options on the registration page.<br>\nSection: `Tickets / Locations / Additional locations`"
                  },
                  "is_early_bird": {
                    "type": "boolean",
                    "description": "Activate early bird prices for categories and/or options.<br>\nSection: `Tickets / Discounts / Early bird`<br>\n`Locked When Guests Are Registered`"
                  },
                  "is_ticketing": {
                    "type": "boolean",
                    "description": "Allow registrants to select several of the same item.<br>\nSection: `Tickets / Settings / Ticketing`"
                  },
                  "is_grouped_payment": {
                    "type": "boolean",
                    "description": "Allow several consecutive registrations by the same attendee.<br>\nSection: `Tickets / Settings / Ticketing`"
                  },
                  "is_sessions_active": {
                    "type": "boolean",
                    "description": "Activate specific dates for categories and options.<br>\nSection: `Tickets / Settings / Ticketing`"
                  },
                  "is_check_session_active": {
                    "type": "boolean",
                    "description": "Create a QR code for categories and/or options.<br>\nSection: `Tickets / Settings / Ticketing`"
                  },
                  "autogenerate_invoices": {
                    "type": "boolean",
                    "description": "Automatically generate invoice upon registration.<br>\nSection: `Money / Settings / Invoices and credit notes`"
                  },
                  "send_invoice_with_email": {
                    "type": "boolean",
                    "description": "Generate and attach invoice to confirmation email.<br>\nSection: `Money / Settings / Invoices and credit notes`"
                  },
                  "enable_invoice_update": {
                    "type": "boolean",
                    "description": "Allow invoice updates.<br>\nSection: `Money / Settings / Invoices and credit notes`"
                  },
                  "show_invoices_in_portal": {
                    "type": "boolean",
                    "description": "Display generated invoices and credit notes on the Attendee Hub.<br>\nSection: `Money / Settings / Invoices and credit notes`"
                  },
                  "use_both_addresses": {
                    "type": "boolean",
                    "description": "If invoicing address different from company address, display both on invoice.<br>\nSection: `Money / Settings / Invoices and credit notes`"
                  },
                  "is_belgian_sepa": {
                    "type": "boolean",
                    "description": "Generate Belgian SEPA structured communication.<br>\nSection: `Money / Settings / Invoices and credit notes`"
                  },
                  "is_codabox_active": {
                    "type": "boolean",
                    "description": "Activate CodaBox integration.<br>\nSection: `Money / Settings / Invoices and credit notes`"
                  },
                  "send_proforma_with_email": {
                    "type": "boolean",
                    "description": "Attach receipt to confirmation email.<br>\nSection: `Money / Settings / Receipts`"
                  },
                  "show_proformas_in_portal": {
                    "type": "boolean",
                    "description": "Display receipts in the Attendee Hub.<br>\nSection: `Money / Settings / Receipts`"
                  },
                  "use_vat": {
                    "type": "boolean",
                    "description": "Activate Tax/VAT.<br>\nSection: `Money / Settings / Tax/VAT`<br>\n`Locked When Guests Are Registered`"
                  },
                  "tax_label": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Label of the tax.<br>\nSection: `Money / Settings / Tax/VAT`",
                    "maxLength": 64
                  },
                  "is_vat_incl": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Whether the taxes are included in the event.<br>\nSection: `Money / Settings / Tax/VAT`<br>\nAllowed values: `null = No tax/VAT` `false = Tax/VAT excl.` `true = Tax/VAT incl.`<br>\n`Locked When Guests Are Registered`"
                  },
                  "tracking_code": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Tracking code.<br>\nSection: `Geeks / Analytics & tracking`"
                  },
                  "auto_config": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Automatic configuration.<br>\nSection: `Geeks / Automatic configuration`"
                  }
                },
                "required": [
                  "uid"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "`Event`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Event"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/events/fields": {
      "get": {
        "operationId": "events.getFields",
        "description": "This method is used to collect the **list of fields and associated labels for a given event**.<br>\nIt will return only the fields activated in the registration form.",
        "summary": "Get all fields",
        "tags": [
          "Events"
        ],
        "parameters": [
          {
            "name": "event_uid",
            "in": "query",
            "required": true,
            "description": "UID of the event.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of `Field`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Field"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/events/categories": {
      "get": {
        "operationId": "events.getCategories",
        "description": "This method is used to collect the **categories of the specified event**.",
        "summary": "Get all categories",
        "tags": [
          "Events"
        ],
        "parameters": [
          {
            "name": "event_uid",
            "in": "query",
            "required": true,
            "description": "UID of the event.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of `Category`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Category"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/events/options": {
      "get": {
        "operationId": "events.getOptions",
        "description": "This method is used to collect the **options of the specified event**.",
        "summary": "Get all options",
        "tags": [
          "Events"
        ],
        "parameters": [
          {
            "name": "event_uid",
            "in": "query",
            "required": true,
            "description": "UID of the event.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of `Option`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Option"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/events/attendees-statuses": {
      "get": {
        "operationId": "events.getAttendeesStatuses",
        "description": "This method is used to collect all possible **attendees statuses of the specified event**.",
        "summary": "Get all attendees statuses",
        "tags": [
          "Events"
        ],
        "parameters": [
          {
            "name": "event_uid",
            "in": "query",
            "required": true,
            "description": "UID of the event.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "examples": [
                        [
                          "Complete",
                          "Cancelled",
                          "Not coming",
                          "Imported/Pre-registrations",
                          "Notify me",
                          "Registering"
                        ]
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/invoices": {
      "get": {
        "operationId": "invoices.getInvoices",
        "description": "This method is used to collect the **list of invoices associated to all profiles connected to this integration, with pagination**. You can specify the prefix and the last invoice number you collected to list further invoices only.",
        "summary": "Get invoices",
        "tags": [
          "Invoices"
        ],
        "parameters": [
          {
            "name": "prefix",
            "in": "query",
            "description": "Invoice number prefix.",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "default": null,
              "maxLength": 50
            }
          },
          {
            "name": "last",
            "in": "query",
            "description": "Last invoice number collected.",
            "schema": {
              "type": "integer",
              "default": 0,
              "minimum": 0
            }
          },
          {
            "name": "event_uid",
            "in": "query",
            "description": "UID of an event.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of invoices shown per page.",
            "schema": {
              "type": "integer",
              "default": 20,
              "minimum": 1,
              "maximum": 200
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Sort by",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "updated_at"
              ],
              "default": "created_at"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "Sort order",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated set of `Invoice`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invoice"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "from": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "last_page": {
                          "type": "integer"
                        },
                        "links": {
                          "type": "array",
                          "description": "Generated paginator links.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "label": {
                                "type": "string"
                              },
                              "active": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "url",
                              "label",
                              "active"
                            ]
                          }
                        },
                        "path": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Base path for paginator generated URLs."
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "Number of items shown per page."
                        },
                        "to": {
                          "type": [
                            "integer",
                            "null"
                          ],
                          "description": "Number of the last item in the slice."
                        },
                        "total": {
                          "type": "integer",
                          "description": "Total number of items being paginated."
                        }
                      },
                      "required": [
                        "current_page",
                        "from",
                        "last_page",
                        "links",
                        "path",
                        "per_page",
                        "to",
                        "total"
                      ]
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "last": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "prev": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "next": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "required": [
                        "first",
                        "last",
                        "prev",
                        "next"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "links",
                    "meta"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/receipts": {
      "get": {
        "operationId": "invoices.getReceipts",
        "description": "This method is used to collect the **list of receipts associated to all profiles connected to this integration, with pagination**. You can specify the prefix and the last reciept number you collected to list further receipts only.",
        "summary": "Get receipts",
        "tags": [
          "Invoices"
        ],
        "parameters": [
          {
            "name": "prefix",
            "in": "query",
            "description": "Receipt number prefix.",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "default": null,
              "maxLength": 50
            }
          },
          {
            "name": "last",
            "in": "query",
            "description": "Last receipt number collected.",
            "schema": {
              "type": "integer",
              "default": 0,
              "minimum": 0
            }
          },
          {
            "name": "event_uid",
            "in": "query",
            "description": "UID of an event.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of receipts shown per page.",
            "schema": {
              "type": "integer",
              "default": 20,
              "minimum": 1,
              "maximum": 200
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Sort by",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "updated_at"
              ],
              "default": "created_at"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "Sort order",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated set of `Invoice`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invoice"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "from": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "last_page": {
                          "type": "integer"
                        },
                        "links": {
                          "type": "array",
                          "description": "Generated paginator links.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "label": {
                                "type": "string"
                              },
                              "active": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "url",
                              "label",
                              "active"
                            ]
                          }
                        },
                        "path": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Base path for paginator generated URLs."
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "Number of items shown per page."
                        },
                        "to": {
                          "type": [
                            "integer",
                            "null"
                          ],
                          "description": "Number of the last item in the slice."
                        },
                        "total": {
                          "type": "integer",
                          "description": "Total number of items being paginated."
                        }
                      },
                      "required": [
                        "current_page",
                        "from",
                        "last_page",
                        "links",
                        "path",
                        "per_page",
                        "to",
                        "total"
                      ]
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "last": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "prev": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "next": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "required": [
                        "first",
                        "last",
                        "prev",
                        "next"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "links",
                    "meta"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/invoices/payment": {
      "post": {
        "operationId": "invoices.createPayment",
        "description": "This method is used to create a **payment for invoices**. You can specify the payment date, amount, reference, and payment method.",
        "summary": "Set invoice payment status",
        "tags": [
          "Invoices"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "guest_uid": {
                    "type": "string",
                    "description": "Guest UID."
                  },
                  "invoice_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Invoice ID.\nIf not provided, the system will try to pair payment with pending invoices / receipts for the guest."
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Payment date.<br>\n`Must be in ISO 8601 format`",
                    "example": "2022-10-25T16:10:00+02:00"
                  },
                  "amount": {
                    "type": "number",
                    "description": "Amount paid.",
                    "minimum": 1
                  },
                  "reference": {
                    "type": "string",
                    "description": "Reference of the payment.",
                    "maxLength": 255
                  },
                  "payment_method": {
                    "type": "string",
                    "description": "Payment method",
                    "default": "Bank Transfer",
                    "maxLength": 50
                  }
                },
                "required": [
                  "guest_uid",
                  "date",
                  "amount"
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "409": {
            "description": "An error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error overview.",
                      "example": "Invoice already set as paid."
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/credit-notes": {
      "get": {
        "operationId": "invoices.getCreditNotes",
        "description": "This method is used to collect the **list of credit notes associated to all profiles connected to this integration, with pagination**. You can specify the prefix and the last credit note number you collected to list further credit notes only.",
        "summary": "Get credit notes",
        "tags": [
          "Invoices"
        ],
        "parameters": [
          {
            "name": "prefix",
            "in": "query",
            "description": "Credit note number prefix.",
            "schema": {
              "type": [
                "string",
                "null"
              ],
              "default": null,
              "maxLength": 50
            }
          },
          {
            "name": "last",
            "in": "query",
            "description": "Last credit note number collected.",
            "schema": {
              "type": "integer",
              "default": 0,
              "minimum": 0
            }
          },
          {
            "name": "event_uid",
            "in": "query",
            "description": "UID of an event.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number.",
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of credit notes shown per page.",
            "schema": {
              "type": "integer",
              "default": 20,
              "minimum": 1,
              "maximum": 200
            }
          },
          {
            "name": "negative_amounts",
            "in": "query",
            "description": "Show credit notes with negative amounts.",
            "schema": {
              "type": "boolean",
              "default": 0
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Sort by",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "updated_at"
              ],
              "default": "created_at"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "Sort order",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated set of `Invoice`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invoice"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "from": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "last_page": {
                          "type": "integer"
                        },
                        "links": {
                          "type": "array",
                          "description": "Generated paginator links.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "label": {
                                "type": "string"
                              },
                              "active": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "url",
                              "label",
                              "active"
                            ]
                          }
                        },
                        "path": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Base path for paginator generated URLs."
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "Number of items shown per page."
                        },
                        "to": {
                          "type": [
                            "integer",
                            "null"
                          ],
                          "description": "Number of the last item in the slice."
                        },
                        "total": {
                          "type": "integer",
                          "description": "Total number of items being paginated."
                        }
                      },
                      "required": [
                        "current_page",
                        "from",
                        "last_page",
                        "links",
                        "path",
                        "per_page",
                        "to",
                        "total"
                      ]
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "last": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "prev": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "next": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "required": [
                        "first",
                        "last",
                        "prev",
                        "next"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "links",
                    "meta"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/other/auth": {
      "get": {
        "operationId": "other.checkAuthentication",
        "description": "This method is typically used to **test the credentials** and returns associated account and integration names.",
        "summary": "Test the credentials",
        "tags": [
          "Other"
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Random UID required by Zapier"
                    },
                    "account_name": {
                      "type": "string",
                      "description": "Name of the account."
                    },
                    "integration_name": {
                      "type": "string",
                      "description": "Name of the integration."
                    }
                  },
                  "required": [
                    "id",
                    "account_name",
                    "integration_name"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/other/attendees": {
      "get": {
        "operationId": "other.getZapGuests",
        "description": "This method returns 2 occurrences of the last attendee that did register on the specified event formatted for the specified webhook.<br>\nThis method is typically used to test the credentials and **collect a sample of the attendee information** that will be sent in the webhooks.",
        "summary": "Get last attendee",
        "tags": [
          "Other"
        ],
        "parameters": [
          {
            "name": "event_uid",
            "in": "query",
            "description": "UID of an event.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "webhook_id",
            "in": "query",
            "description": "ID of a webhook.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/other/notify-me": {
      "get": {
        "operationId": "other.getNotifyMe",
        "description": "This method returns 2 occurrences of the last notify-me registration received on the specified event.<br>\nThis method is typically used to test the credentials and **collect a sample of the \"notify me\" information** that will be sent in the webhooks.",
        "summary": "Get last \"Notify Me\" contact",
        "tags": [
          "Other"
        ],
        "parameters": [
          {
            "name": "event_uid",
            "in": "query",
            "description": "UID of an event.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ZapGuest"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/webhooks": {
      "get": {
        "operationId": "webhooks.getWebhooks",
        "description": "This method returns a list of all webhooks associated with the integration.",
        "summary": "Get all webhooks",
        "tags": [
          "Webhooks"
        ],
        "responses": {
          "200": {
            "description": "Array of `Webhook`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Webhook"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "webhooks.createWebhook",
        "description": "This method is used to **register a new webhook**. You will pass the event to catch and the URL where the webhook should be posted.<br>\nWhen using the `manual` trigger type, the `action_name` parameter is required. idloom-events will create a custom entry in the \"More action\" menu and will offer users to trigger that webhook manually.",
        "summary": "Create a new webhook",
        "tags": [
          "Webhooks"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subscription_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "URL of the webhook.<br>\n`Must be a valid URL`",
                    "maxLength": 200
                  },
                  "event": {
                    "type": "string",
                    "description": "Event used to trigger the webhook.",
                    "enum": [
                      "event.create",
                      "event.update",
                      "event.delete",
                      "event.manual",
                      "guest.create",
                      "guest.update",
                      "guest.delete",
                      "guest.manual",
                      "guest.payment",
                      "notifyMe.create"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "description": "Method you want to use when sending webhooks (`GET`, `POST`, `PUT`, ...).",
                    "default": "PUT",
                    "maxLength": 6
                  },
                  "headers": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Serialized JSON object with key/value pairs containing the header parameters you want to send with the webhook.",
                    "example": "{\\\"Foo\\\": \\\"Bar\\\"}"
                  },
                  "allowed_events": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Restrict this webhook to some events only (comma separated UID).",
                    "example": "63b54eb554943,62b847c16c0ba",
                    "maxLength": 255
                  },
                  "action_name": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Name of the menu entry you will add to the related \"More actions\" menu in the administration interface.",
                    "example": "Send webhook",
                    "maxLength": 64
                  }
                },
                "required": [
                  "subscription_url",
                  "event"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the webhook."
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      },
      "delete": {
        "operationId": "webhooks.destroyWebhook",
        "description": "This method is used to **unregister an existing webhook**. Please note that to un-subscribe as webhook you need or its id or at least the event and/or the `subscription_url` parameters.<br>\nIf you use the `subscription_url` parameter only, you will unsubscribe all webhooks using that specific url.",
        "summary": "Delete a webhook",
        "tags": [
          "Webhooks"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the webhook.<br>Required when none of `subscription_url` and `event` are present.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "subscription_url",
            "in": "query",
            "description": "URL of the webhook.<br>Required when none of `event` and `id` are present.<br>\n`Must be a valid URL`",
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "event",
            "in": "query",
            "description": "Event used to trigger the webhook.<br>Required when none of `subscription_url` and `id` are present.",
            "schema": {
              "type": "string",
              "enum": [
                "event.create",
                "event.update",
                "event.delete",
                "event.manual",
                "guest.create",
                "guest.update",
                "guest.delete",
                "guest.manual",
                "guest.payment",
                "notifyMe.create"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "$ref": "#/components/responses/ModelNotFoundException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "http": {
        "type": "http",
        "scheme": "Bearer"
      }
    },
    "schemas": {
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the category."
          },
          "sku": {
            "type": [
              "string",
              "null"
            ],
            "description": "SKU of the category."
          },
          "name": {
            "type": "string",
            "description": "Name of the category."
          },
          "full_name": {
            "type": "string",
            "description": "Name of the category with the location and date."
          },
          "location": {
            "anyOf": [
              {
                "description": "Location of the category.",
                "$ref": "#/components/schemas/Location"
              },
              {
                "type": "null"
              }
            ]
          },
          "start_date": {
            "type": [
              "string",
              "null"
            ],
            "description": "Start date of the category."
          },
          "end_date": {
            "type": [
              "string",
              "null"
            ],
            "description": "End date of the category."
          },
          "quantity": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Stock quantity of the category."
          },
          "quantity_booked": {
            "type": "integer",
            "description": "Total quantity booked by the guest."
          },
          "early_bird_quantity_booked": {
            "type": "integer",
            "description": "Quantity booked by the guest before the end of the early bird period."
          },
          "total_quantity_booked": {
            "type": "integer",
            "description": "Total booked quantity of the category."
          },
          "sold_out": {
            "type": "boolean",
            "description": "Whether the category is sold-out."
          },
          "price": {
            "type": "number",
            "description": "Price of the category."
          },
          "early_bird_price": {
            "type": "number",
            "description": "Early bird price of the category."
          },
          "early_bird_date": {
            "type": [
              "string",
              "null"
            ],
            "description": "Early bird date of the category."
          },
          "linked_options": {
            "type": "array",
            "description": "The options linked to the category.",
            "items": {
              "type": "integer"
            }
          }
        },
        "required": [
          "id",
          "sku",
          "name",
          "full_name",
          "location",
          "start_date",
          "end_date",
          "quantity",
          "total_quantity_booked",
          "sold_out",
          "price",
          "early_bird_price",
          "early_bird_date",
          "linked_options"
        ],
        "title": "Category"
      },
      "DocumentTransactions": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Invoice"
        },
        "title": "DocumentTransactions"
      },
      "Event": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "UID of the event."
          },
          "id": {
            "type": "string",
            "description": "Same as the UID of the event. (Required by Zapier)"
          },
          "profile_uid": {
            "type": "string",
            "description": "UID of the profile."
          },
          "status": {
            "type": "string",
            "description": "Status of the event."
          },
          "name": {
            "type": "string",
            "description": "Name of the event.<br>\n            Section: `Essentials / Basics`"
          },
          "alias": {
            "type": [
              "string",
              "null"
            ],
            "description": "Alias (internal name) of the event.<br>\n                 Section: `Essentials / Basics`"
          },
          "url": {
            "type": "string",
            "description": "URL of the event.<br>\n            Section: `Essentials / Basics`"
          },
          "manager_url": {
            "type": "string",
            "description": "URL to edit the event."
          },
          "language": {
            "type": "string",
            "description": "Language of the event. <br>\n            Section: `Essentials / Basics`"
          },
          "organiser": {
            "type": [
              "string",
              "null"
            ],
            "description": "Organiser of the event.<br>\n                 Section: `Essentials / Basics`"
          },
          "tags": {
            "type": "array",
            "description": "Tags of the event. <br>\n                   Section: `Essentials / Basics`",
            "items": {
              "type": "string"
            }
          },
          "metadata": {
            "type": "object",
            "description": "The metadata of the event.\nSection: `Essentials / Basics`",
            "additionalProperties": {}
          },
          "is_date_unknown": {
            "type": "boolean",
            "description": "Whether there is an event date.<br>\n          Section: `Essentials / Dates`"
          },
          "start_date": {
            "type": [
              "string",
              "null"
            ],
            "description": "Start date of the event. <br>\n                 Section: `Essentials / Dates`",
            "examples": [
              "2023-12-12T09:30:00+01:00"
            ]
          },
          "end_date": {
            "type": [
              "string",
              "null"
            ],
            "description": "End date of the event.<br>\n                 Section: `Essentials / Dates`",
            "examples": [
              "2023-12-12T11:30:00+01:00"
            ]
          },
          "is_all_day": {
            "type": "boolean",
            "description": "Whether this is an all day event.<br>\n          Section: `Essentials / Dates`"
          },
          "has_registering_period": {
            "type": "boolean",
            "description": "Whether the event has a registration period.<br>\n          Section: `Essentials / Dates`"
          },
          "registration_start_date": {
            "type": [
              "string",
              "null"
            ],
            "description": "Registration start date.<br>\n                 Section: `Essentials / Dates`",
            "examples": [
              "2023-10-01T09:00:00+01:00"
            ]
          },
          "registration_end_date": {
            "type": [
              "string",
              "null"
            ],
            "description": "Registration end date.<br>\n                 Section: `Essentials / Dates`",
            "examples": [
              "2023-12-09T23:00:00+01:00"
            ]
          },
          "availability_start_date": {
            "type": "string",
            "description": "Registration start date or start date of the event."
          },
          "availability_end_date": {
            "type": "string",
            "description": "Registration end date or end date of the event."
          },
          "has_notify_me": {
            "type": "boolean",
            "description": "Collect \"Notify me\" prospects prior to registering period.<br>\n          Section: `Essentials / Dates`"
          },
          "locale": {
            "type": "string",
            "description": "Locale (Regional settings) of the event.<br>\n            Section: `Essentials / Regional settings`"
          },
          "location": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of the event location."
              },
              "name": {
                "type": "string",
                "description": "Name of the event location."
              },
              "address": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "street": {
                    "type": "string"
                  },
                  "postal_code": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "locality": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "state": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "country": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "latitude": {
                    "type": [
                      "number",
                      "null"
                    ]
                  },
                  "longitude": {
                    "type": [
                      "number",
                      "null"
                    ]
                  }
                },
                "required": [
                  "street",
                  "postal_code",
                  "locality",
                  "state",
                  "country",
                  "latitude",
                  "longitude"
                ]
              },
              "timezone": {
                "type": "string",
                "description": "Timezone of the event location."
              }
            },
            "required": [
              "type",
              "name",
              "address",
              "timezone"
            ]
          },
          "is_free": {
            "type": "boolean",
            "description": "Whether the event is free or paid. <br>\n          Section: `Essentials / Pricing plan`"
          },
          "currency": {
            "type": "string",
            "description": "Currency of the event. <br>\n            Section: `Essentials / Pricing plan`"
          },
          "is_first_steps_inverted": {
            "type": "boolean",
            "description": "Whether to invert the two first registration steps: Category and options first. <br>\n          Section: `Essentials / Registration flow`"
          },
          "skip_step2": {
            "type": "boolean",
            "description": "Whether to skip the second registration step: Category and options.<br>\n          Section: `Essentials / Registration flow`"
          },
          "skip_step3": {
            "type": "boolean",
            "description": "Whether to skip the fourth registration step: Checkout.<br>\n          Section: `Essentials / Registration flow`"
          },
          "skip_step4": {
            "type": "boolean",
            "description": "Whether to invert the two first registration steps: Category and options first. <br>\n          Section: `Essentials / Registration flow`"
          },
          "image": {
            "type": [
              "string",
              "null"
            ],
            "description": "Cover image of the event.\n                 Section: `Content / Website / Homepage`"
          },
          "display_title_on_img": {
            "type": "boolean",
            "description": "How to display the title on the cover image.<br>\n          Section: `Content / Website / Homepage`<br>\n          Allowed values: `0 = Underneath cover image` `1 = Over cover image` `2 = No title`"
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "description": "HTML description of the event. <br>\n                 Section: `Content / Website / Homepage`"
          },
          "display_share": {
            "type": "boolean",
            "description": "Display social networks share icons on the event page.<br>\n          Section: `Content / Website / Display options`"
          },
          "is_address_hidden": {
            "type": "boolean",
            "description": "Whether the event location is hidden from on the homepage, the check-out page and the confirmation email.<br>\n          Section: `Content / Website / Display options`"
          },
          "speakers": {
            "type": "array",
            "description": "Speakers of the event.\nSection: `Content / Website / Additional pages`",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "job_title": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "company": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "picture": {
                  "type": "string"
                },
                "long_description": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "website": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "facebook": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "twitter": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "linkedin": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "xing": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "bluesky": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "instagram": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "name",
                "job_title",
                "company",
                "picture",
                "long_description",
                "website",
                "facebook",
                "twitter",
                "linkedin",
                "xing",
                "bluesky",
                "instagram"
              ]
            }
          },
          "sponsors": {
            "type": "array",
            "description": "Sponsors of the event.\nSection: `Content / Website / Additional pages`",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "picture": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "short_description": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "long_description": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "website": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "facebook": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "twitter": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "linkedin": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "xing": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "bluesky": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "instagram": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "name",
                "picture",
                "short_description",
                "long_description",
                "website",
                "facebook",
                "twitter",
                "linkedin",
                "xing",
                "bluesky",
                "instagram"
              ]
            }
          },
          "partners": {
            "type": "array",
            "description": "Partners of the event.\nSection: `Content / Website / Additional pages`",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "picture": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "short_description": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "long_description": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "website": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "facebook": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "twitter": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "linkedin": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "xing": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "bluesky": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "instagram": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "required": [
                "name",
                "picture",
                "short_description",
                "long_description",
                "website",
                "facebook",
                "twitter",
                "linkedin",
                "xing",
                "bluesky",
                "instagram"
              ]
            }
          },
          "registration_explanation": {
            "type": [
              "string",
              "null"
            ],
            "description": "HTML displayed in an ‚ÄúImportant information‚Äù section at the bottom of the **registration form**.<br>\n                 Section: `Content / Registration process / Important information`"
          },
          "categories_explanation": {
            "type": [
              "string",
              "null"
            ],
            "description": "HTML displayed in an ‚ÄúImportant information‚Äù section at the bottom of the **tickets** page.<br>\n                 Section: `Content / Registration process / Important information`"
          },
          "hotels_explanation": {
            "type": [
              "string",
              "null"
            ],
            "description": "HTML displayed in an ‚ÄúImportant information‚Äù section at the bottom of the **hotel booking** page.<br>\n                 Section: `Content / Registration process / Important information`"
          },
          "payment_explanation": {
            "type": [
              "string",
              "null"
            ],
            "description": "HTML displayed in an ‚ÄúImportant information‚Äù section at the bottom of the **check-out** page.<br>\n                 Section: `Content / Registration process / Important information`"
          },
          "show_qr_code": {
            "type": "boolean",
            "description": "Display QR code on the confirmation page.<br>\n          Section: `Content / Registration process / Confirmation page`"
          },
          "show_print_ticket_button": {
            "type": "boolean",
            "description": "Display \"Print your ticket\" button on the confirmation page.<br>\n          Section: `Content / Registration process / Confirmation page`"
          },
          "show_print_button": {
            "type": "boolean",
            "description": "Display \"Print summary\" button on the confirmation page.<br>\n          Section: `Content / Registration process / Confirmation page"
          },
          "is_portal_in_confirmation_page": {
            "type": "boolean",
            "description": "Display ‚ÄúGo to the Attendee Hub‚Äù button on the confirmation page.<br>\n          Section: `Content / Registration process / Confirmation page`"
          },
          "is_autosending_email": {
            "type": "boolean",
            "description": "Send confirmation email automatically after registration.<br>\n          Section: `Content / Automatic emails / Settings`"
          },
          "is_accompanying_cc": {
            "type": "boolean",
            "description": "Send confirmation email to accompanying person.<br>\n          Section: `Content / Automatic emails / Settings`"
          },
          "be_bcc_email_confirmation": {
            "type": "boolean",
            "description": "Be in BCC of automatic emails.<br>\n          Section: `Content / Automatic emails / Settings`"
          },
          "bcc_mail_address": {
            "type": [
              "string",
              "null"
            ],
            "description": "BCC email address for automatic emails.<br>\n                 Section: `Content / Automatic emails / Settings`"
          },
          "custom_replyto_email_address": {
            "type": [
              "string",
              "null"
            ],
            "description": "Override profile 'Reply-to' email address for automatic emails.<br>\n                 Section: `Content / Automatic emails / Settings`"
          },
          "display_cover_in_email": {
            "type": "boolean",
            "description": "Display cover image in the confirmation email.<br>\n          Section: `Content / Automatic emails / Content`"
          },
          "display_guest_details": {
            "type": "boolean",
            "description": "Display full attendee's details.<br>\n          Section: `Content / Automatic emails / Content`"
          },
          "is_address_in_email": {
            "type": "boolean",
            "description": "Display event location in the confirmation email.<br>\n          Section: `Content / Automatic emails / Content`"
          },
          "is_portal_in_email": {
            "type": "boolean",
            "description": "Display ‚ÄúGo to the Attendee Hub‚Äù button in the confirmation email.<br>\n          Section: `Content / Automatic emails / Content`"
          },
          "is_foldable_ticket_in_email": {
            "type": "boolean",
            "description": "Display \"Print your ticket\" button in the confirmation email.<br>\n          Section: `Content / Automatic emails / Content`"
          },
          "display_qrcode": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "Display QR code on the confirmation email.<br>\n               Section: `Content / Automatic emails / Content`<br>\n               Allowed values: `0 = No QR code` `1 = QR code for internal check-in system` `2 = QR code for external check-in system`"
          },
          "is_private": {
            "type": "boolean",
            "description": "Marking your event as \"private\" will prevent indexation in Google and listing in your catalog(s).<br>\n          Section: `Content / Promotion / Website privacy`"
          },
          "is_domain_redirection_disabled": {
            "type": "boolean",
            "description": "Whether the domain root redirection for this event is disabled. The event will be visible in catalog but never the default home page.<br>\n          Section: `Content / Promotion / Website privacy`"
          },
          "meta_title": {
            "type": [
              "string",
              "null"
            ],
            "description": "Meta title.<br>\n                 Section: `Content / Promotion / Meta settings`"
          },
          "meta_description": {
            "type": [
              "string",
              "null"
            ],
            "description": "Meta description. <br>\n                 Section: `Content / Promotion / Meta settings`"
          },
          "is_descriptions_split": {
            "type": "boolean",
            "description": "More options: Use specific content for social networks, Attendee Hub and idloom.passport App.<br>\n          Section: `Content / Promotion / Meta settings`"
          },
          "social_media_title": {
            "type": [
              "string",
              "null"
            ],
            "description": "Social media title.<br>\n                 Section: `Content / Promotion / Meta settings`"
          },
          "social_media_description": {
            "type": [
              "string",
              "null"
            ],
            "description": "Social media description.<br>\n                 Section: `Content / Promotion / Meta settings`"
          },
          "app_description": {
            "type": [
              "string",
              "null"
            ],
            "description": "Attendee Hub & App description.<br>\n                 Section: `Content / Promotion / Meta settings`"
          },
          "is_email_unique": {
            "type": "boolean",
            "description": "Force email uniqueness.<br>\n          Section: `Registration / Settings / Customize the registration process`"
          },
          "is_captcha_active": {
            "type": "boolean",
            "description": "Activate captcha.<br>\n          Section: `Registration / Settings / Customize the registration process`"
          },
          "can_ask_confirmation": {
            "type": "boolean",
            "description": "Allow attendees to resend themselves the confirmation email.<br>\n          Section: `Registration / Settings / Customize the registration process`"
          },
          "can_edit_guest": {
            "type": "boolean",
            "description": "Allow attendees to modify their registration.<br>\n          Section: `Registration / Settings / Customize the registration process`"
          },
          "is_ticket_downgrade_allowed": {
            "type": "boolean",
            "description": "Allow ticket downgrades.<br>\n          Section: `Registration / Settings / Customize the registration process`"
          },
          "can_cancel_guest": {
            "type": "boolean",
            "description": "Allow attendees to cancel their registration.<br>\n          Section: `Registration / Settings / Customize the registration process`"
          },
          "can_guest_decline": {
            "type": "boolean",
            "description": "Allow registrants to notify that they will not attend.<br>\n          Section: `Registration / Settings / Customize the registration process`"
          },
          "restricted_registration": {
            "type": "boolean",
            "description": "Activate restricted registration.<br>\n          Section: `Registration / Settings / Customize the registration process`"
          },
          "restricted_modal_text": {
            "type": [
              "string",
              "null"
            ],
            "description": "Pop-up text for restricted registration..<br>\n                 Section: `Registration / Settings / Customize the registration process`"
          },
          "restricted_mandatory": {
            "type": "boolean",
            "description": "Make the restricted code mandatory for registration.<br>\n          Section: `Registration / Settings / Customize the registration process`"
          },
          "has_restricted_code": {
            "type": "boolean",
            "description": "Use the same restricted code for all registrants.<br>\n          Section: `Registration / Settings / Customize the registration process`"
          },
          "restricted_code": {
            "type": [
              "string",
              "null"
            ],
            "description": "Restricted code for all registrants.<br>\n                 Section: `Registration / Settings / Customize the registration process`"
          },
          "is_categories_hidden": {
            "type": "boolean",
            "description": "Hide the event category.<br>\n          Section: `Tickets / Categories / Configure your categories`"
          },
          "categories_display_name": {
            "type": [
              "string",
              "null"
            ],
            "description": "Categories title.<br>\n                 Section: `Tickets / Categories / Configure your categories`"
          },
          "categories": {
            "type": "array",
            "description": "Categories.\nSection: `Tickets / Categories / Configure your categories`",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          },
          "has_stock_management": {
            "type": "boolean",
            "description": "Activate stock management.<br>\n          Section: `Tickets / Categories / Stock management`"
          },
          "sold_out_text": {
            "type": [
              "string",
              "null"
            ],
            "description": "Sold-out label.<br>\n                 Section: `Tickets / Categories / Stock management`"
          },
          "show_quantities_at": {
            "type": "integer",
            "description": "Display remaining quantities when sold percentage reached.<br>\n         Section: `Tickets / Categories / Stock management`"
          },
          "is_soldout_hidden": {
            "type": "boolean",
            "description": "Hide sold-out items.<br>\n          Section: `Tickets / Categories / Stock management`"
          },
          "is_waiting_list_active": {
            "type": "boolean",
            "description": "Activate waiting list for sold-out options.<br>\n          Section: `Tickets / Categories / Stock management`"
          },
          "use_global_quantity": {
            "type": "boolean",
            "description": "Use global quantity for all categories.<br>\n          Section: `Tickets / Categories / Stock management`"
          },
          "global_quantity": {
            "type": "integer",
            "description": "Global quantity for all categories.<br>\n         Section: `Tickets / Categories / Stock management`"
          },
          "options_display_name": {
            "type": [
              "string",
              "null"
            ],
            "description": "Options title.<br>\n                 Section: `Tickets / Options / Configure your options`"
          },
          "options": {
            "type": "array",
            "description": "Options of the event.\nSection: `Tickets / Options / Configure your options`",
            "items": {
              "$ref": "#/components/schemas/Option"
            }
          },
          "has_location_selector": {
            "type": "boolean",
            "description": "Display filter by location for options on the registration page.<br>\n          Section: `Tickets / Locations / Additional locations`"
          },
          "additional_locations": {
            "type": "array",
            "description": "Additional locations of the event.\nSection: `Tickets / Locations / Additional locations`",
            "items": {
              "$ref": "#/components/schemas/Location"
            }
          },
          "is_early_bird": {
            "type": "boolean",
            "description": "Activate early bird prices for categories and/or options.<br>\n          Section: `Tickets / Discounts / Early bird`"
          },
          "is_ticketing": {
            "type": "boolean",
            "description": "Allow registrants to select several of the same item.<br>\n          Section: `Tickets / Settings / Ticketing`"
          },
          "is_grouped_payment": {
            "type": "boolean",
            "description": "Allow several consecutive registrations by the same attendee.<br>\n          Section: `Tickets / Settings / Ticketing`"
          },
          "is_sessions_active": {
            "type": "boolean",
            "description": "Activate specific dates for categories and options.<br>\n          Section: `Tickets / Settings / Ticketing`"
          },
          "is_check_session_active": {
            "type": "boolean",
            "description": "Create a QR code for categories and/or options.<br>\n          Section: `Tickets / Settings / Ticketing`"
          },
          "autogenerate_invoices": {
            "type": "boolean",
            "description": "Automatically generate invoice upon registration.<br>\n          Section: `Money / Settings / Invoices and credit notes`"
          },
          "send_invoice_with_email": {
            "type": "boolean",
            "description": "Generate and attach invoice to confirmation email.<br>\n          Section: `Money / Settings / Invoices and credit notes`"
          },
          "enable_invoice_update": {
            "type": "boolean",
            "description": "Allow invoice updates.<br>\n          Section: `Money / Settings / Invoices and credit notes`"
          },
          "show_invoices_in_portal": {
            "type": "boolean",
            "description": "Display generated invoices and credit notes on the Attendee Hub.<br>\n          Section: `Money / Settings / Invoices and credit notes`"
          },
          "use_both_addresses": {
            "type": "boolean",
            "description": "If invoicing address different from company address, display both on invoice.<br>\n          Section: `Money / Settings / Invoices and credit notes`"
          },
          "is_belgian_sepa": {
            "type": "boolean",
            "description": "Generate Belgian SEPA structured communication.<br>\n          Section: `Money / Settings / Invoices and credit notes`"
          },
          "is_codabox_active": {
            "type": "boolean",
            "description": "Activate CodaBox integration.<br>\n          Section: `Money / Settings / Invoices and credit notes`"
          },
          "send_proforma_with_email": {
            "type": "boolean",
            "description": "Attach receipt to confirmation email.<br>\n          Section: `Money / Settings / Receipts`"
          },
          "show_proformas_in_portal": {
            "type": "boolean",
            "description": "Display receipts in the Attendee Hub.<br>\n          Section: `Money / Settings / Receipts`"
          },
          "use_vat": {
            "type": "boolean",
            "description": "Activate Tax/VAT.<br>\n          Section: `Money / Settings / Tax/VAT`"
          },
          "tax_label": {
            "type": [
              "string",
              "null"
            ],
            "description": "Label of the tax.<br>\n                 Section: `Money / Settings / Tax/VAT`"
          },
          "is_vat_incl": {
            "type": [
              "boolean",
              "null"
            ],
            "description": "Whether the taxes are included in the event.<br>\n               Section: `Money / Settings / Tax/VAT`<br>\n               Allowed values: `null = No tax/VAT` `false = Tax/VAT excl.` `true = Tax/VAT incl.`"
          },
          "tracking_code": {
            "type": [
              "string",
              "null"
            ],
            "description": "Tracking code.<br>\n                 Section: `Geeks / Analytics & tracking`"
          },
          "auto_config": {
            "type": [
              "string",
              "null"
            ],
            "description": "Automatic configuration.<br>\n                 Section: `Geeks / Automatic configuration`"
          },
          "created_at": {
            "type": "string",
            "description": "Creation date of the event."
          },
          "updated_at": {
            "type": "string",
            "description": "Last update date of the event."
          },
          "translations": {
            "type": "object",
            "description": "Translations of the event, keyed by the language code.",
            "additionalProperties": {
              "$ref": "#/components/schemas/Event"
            }
          }
        },
        "required": [
          "uid",
          "id",
          "profile_uid",
          "status",
          "name",
          "alias",
          "url",
          "manager_url",
          "language",
          "organiser",
          "tags",
          "metadata",
          "is_date_unknown",
          "start_date",
          "end_date",
          "is_all_day",
          "has_registering_period",
          "registration_start_date",
          "registration_end_date",
          "has_notify_me",
          "locale",
          "location",
          "is_free",
          "currency",
          "is_first_steps_inverted",
          "skip_step2",
          "skip_step3",
          "skip_step4",
          "image",
          "display_title_on_img",
          "description",
          "display_share",
          "is_address_hidden",
          "speakers",
          "sponsors",
          "partners",
          "registration_explanation",
          "categories_explanation",
          "hotels_explanation",
          "payment_explanation",
          "show_qr_code",
          "show_print_ticket_button",
          "show_print_button",
          "is_portal_in_confirmation_page",
          "is_autosending_email",
          "is_accompanying_cc",
          "be_bcc_email_confirmation",
          "bcc_mail_address",
          "custom_replyto_email_address",
          "display_cover_in_email",
          "display_guest_details",
          "is_address_in_email",
          "is_portal_in_email",
          "is_foldable_ticket_in_email",
          "display_qrcode",
          "is_private",
          "is_domain_redirection_disabled",
          "meta_title",
          "meta_description",
          "is_descriptions_split",
          "social_media_title",
          "social_media_description",
          "app_description",
          "is_email_unique",
          "is_captcha_active",
          "can_ask_confirmation",
          "can_edit_guest",
          "is_ticket_downgrade_allowed",
          "can_cancel_guest",
          "can_guest_decline",
          "restricted_registration",
          "restricted_modal_text",
          "restricted_mandatory",
          "has_restricted_code",
          "restricted_code",
          "is_categories_hidden",
          "categories_display_name",
          "categories",
          "has_stock_management",
          "sold_out_text",
          "show_quantities_at",
          "is_soldout_hidden",
          "is_waiting_list_active",
          "use_global_quantity",
          "global_quantity",
          "options_display_name",
          "options",
          "has_location_selector",
          "additional_locations",
          "is_early_bird",
          "is_ticketing",
          "is_grouped_payment",
          "is_sessions_active",
          "is_check_session_active",
          "autogenerate_invoices",
          "send_invoice_with_email",
          "enable_invoice_update",
          "show_invoices_in_portal",
          "use_both_addresses",
          "is_belgian_sepa",
          "is_codabox_active",
          "send_proforma_with_email",
          "show_proformas_in_portal",
          "use_vat",
          "tax_label",
          "is_vat_incl",
          "tracking_code",
          "auto_config",
          "created_at",
          "updated_at",
          "translations"
        ],
        "title": "Event"
      },
      "Field": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the field."
          },
          "type": {
            "type": "string",
            "description": "Type of the field."
          },
          "label": {
            "type": "string",
            "description": "Label of the field."
          },
          "placeholder": {
            "type": [
              "string",
              "null"
            ],
            "description": "Placeholder of the field."
          },
          "is_mandatory": {
            "type": "boolean",
            "description": "Whether the field is mandatory."
          },
          "fields": {
            "type": "array",
            "description": "Subfields of the field.",
            "items": {
              "$ref": "#/components/schemas/Subfield"
            }
          }
        },
        "required": [
          "name",
          "type",
          "label",
          "is_mandatory"
        ],
        "title": "Field"
      },
      "Guest": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "UID of the attendee."
          },
          "id": {
            "type": "string",
            "description": "Same as the UID of the attendee. (Required by Zapier)"
          },
          "profile_uid": {
            "type": "string",
            "description": "UID of the profile."
          },
          "event_uid": {
            "type": "string",
            "description": "UID of the event."
          },
          "anonymized_at": {
            "type": [
              "string",
              "null"
            ],
            "description": "Date of attendee anonymization."
          },
          "language": {
            "type": "string",
            "description": "Language of the attendee."
          },
          "check_ins": {
            "type": "integer",
            "description": "Total number of check-ins."
          },
          "first_check_in_at": {
            "type": [
              "string",
              "null"
            ],
            "description": "Date of the attendee's first check-in."
          },
          "paid_by": {
            "type": [
              "string",
              "null"
            ],
            "description": "UID of the attendee who paid for this attendee."
          },
          "paying_for": {
            "type": "array",
            "description": "UIDs of attendees that this attendee has paid for.",
            "items": {
              "type": "string"
            }
          },
          "comment": {
            "type": [
              "string",
              "null"
            ],
            "description": "Comment left by the attendee."
          },
          "notes": {
            "type": [
              "string",
              "null"
            ],
            "description": "Notes about the attendee."
          },
          "hotel_notes": {
            "type": [
              "string",
              "null"
            ],
            "description": "Notes about the attendee's hotel."
          },
          "registration_status": {
            "type": "string",
            "description": "Registration status of the attendee."
          },
          "coupon": {
            "type": [
              "object",
              "null"
            ],
            "description": "Coupon used by the attendee.",
            "properties": {
              "name": {
                "type": "string"
              },
              "code": {
                "type": "string"
              },
              "discount": {
                "type": "number"
              }
            },
            "required": [
              "name",
              "code",
              "discount"
            ]
          },
          "category": {
            "description": "Category of the attendee",
            "$ref": "#/components/schemas/Category"
          },
          "options": {
            "type": "array",
            "description": "Options of the attendee",
            "items": {
              "$ref": "#/components/schemas/Option"
            }
          },
          "hotel": {
            "type": [
              "string",
              "null"
            ],
            "description": "Hotel name of the attendee"
          },
          "amount_tax_incl": {
            "type": "number",
            "description": "Total price (taxes included) of the attendee's registration."
          },
          "amount_tax_excl": {
            "type": "number",
            "description": "Total price (taxes excluded) of the attendee's registration."
          },
          "amount_tax": {
            "type": "number",
            "description": "Amount of taxes for the attendee's registration."
          },
          "payment_status": {
            "type": "string",
            "description": "Payment status of the attendee's registration."
          },
          "payment_method": {
            "type": "string",
            "description": "Payment method used to pay the attendee's registration."
          },
          "payment_date": {
            "type": [
              "string",
              "null"
            ],
            "description": "Payment date of the attendee's registration."
          },
          "payment_amount": {
            "type": "number",
            "description": "Amount paid for the attendee's registration."
          },
          "last_invoice_number": {
            "type": [
              "string",
              "null"
            ],
            "description": "Number of the attendee's last invoice with prefix."
          },
          "last_invoice_date": {
            "type": [
              "string",
              "null"
            ],
            "description": "Date of the attendee's last invoice."
          },
          "last_invoice_due_date": {
            "type": [
              "string",
              "null"
            ],
            "description": "Due date of the attendee's last invoice."
          },
          "last_proforma_number": {
            "type": [
              "string",
              "null"
            ],
            "description": "Number of the attendee's last proforma with prefix."
          },
          "last_proforma_date": {
            "type": [
              "string",
              "null"
            ],
            "description": "Due date of the attendee's last proforma."
          },
          "last_credit_note_number": {
            "type": [
              "string",
              "null"
            ],
            "description": "Number of the attendee's last credit note with prefix."
          },
          "last_credit_note_date": {
            "type": [
              "string",
              "null"
            ],
            "description": "Due date of the attendee's last credit note."
          },
          "created_at": {
            "type": "string",
            "description": "Creation date of the attendee."
          },
          "updated_at": {
            "type": "string",
            "description": "Last update date of the attendee."
          },
          "event_name": {
            "type": "string",
            "description": "Name of the event."
          },
          "event_start_date": {
            "type": [
              "string",
              "null"
            ],
            "description": "Start date of the event."
          },
          "event_end_date": {
            "type": [
              "string",
              "null"
            ],
            "description": "End date of the event."
          }
        },
        "required": [
          "uid",
          "id",
          "profile_uid",
          "event_uid",
          "anonymized_at",
          "language",
          "check_ins",
          "first_check_in_at",
          "paid_by",
          "paying_for",
          "comment",
          "notes",
          "hotel_notes",
          "registration_status",
          "coupon",
          "created_at",
          "updated_at",
          "event_name",
          "event_start_date",
          "event_end_date"
        ],
        "title": "Guest"
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the document."
          },
          "prefix": {
            "type": "string",
            "description": "Prefix of the document."
          },
          "number": {
            "type": "integer",
            "description": "Number of the document without prefix."
          },
          "full_number": {
            "type": "string",
            "description": "Number of the document with prefix."
          },
          "type": {
            "type": "string",
            "description": "Type of document"
          },
          "amount_tax_incl": {
            "type": "number",
            "description": "Total price (taxes included) of the document."
          },
          "amount_tax_excl": {
            "type": "number",
            "description": "Total price (taxes excluded) of the document."
          },
          "amount_tax": {
            "type": "number",
            "description": "Amount of taxes for the document."
          },
          "tax_rate": {
            "type": "number",
            "description": "Tax rate of the document."
          },
          "tax_text": {
            "type": "string",
            "description": "Tax rate information of the document."
          },
          "is_valid_vat": {
            "type": "boolean",
            "description": "Whether the VAT number is valid."
          },
          "tax_error": {
            "type": "boolean",
            "description": "Provides details about any errors encountered during VAT calculation"
          },
          "date": {
            "type": "string",
            "description": "Date of the document."
          },
          "due_date": {
            "type": "string",
            "description": "Due date of the invoice."
          },
          "event_name": {
            "type": "string",
            "description": "Event name."
          },
          "event_uid": {
            "type": "string",
            "description": "Event uid."
          },
          "reference": {
            "type": [
              "string",
              "null"
            ],
            "description": "Purchase order."
          },
          "cost_code": {
            "type": [
              "string",
              "null"
            ],
            "description": "Cost accounting code of the document."
          },
          "payment_status": {
            "type": "string",
            "description": "Payment status of the document."
          },
          "payment_method": {
            "type": "string",
            "description": "Payment method used to pay the document."
          },
          "payment_date": {
            "type": [
              "string",
              "null"
            ],
            "description": "Payment date of the document."
          },
          "payment_amount": {
            "type": "number",
            "description": "Amount paid for the document."
          },
          "payment_reference": {
            "type": [
              "string",
              "null"
            ],
            "description": "Order ID of the attendee."
          },
          "cancels_invoice": {
            "type": "string",
            "description": "Status of the document."
          },
          "line_items": {
            "type": "array",
            "description": "Items of the document",
            "items": {
              "$ref": "#/components/schemas/InvoiceLineItem"
            }
          },
          "attendee": {
            "type": "object",
            "properties": {
              "uid": {
                "type": "string",
                "description": "UID of the attendee."
              },
              "vat_number": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "VAT number of the attendee."
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Name of the attendee."
              },
              "title": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Title of the attendee."
              },
              "firstname": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Firstname of the attendee."
              },
              "lastname": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Lastname of the attendee."
              },
              "email": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Email of the attendee."
              },
              "cpy_name": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Company name of the attendee."
              },
              "inv_to": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "invoice to the attention of."
              },
              "street": {
                "type": "string",
                "description": "Street name and number of the attendee."
              },
              "postal_code": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Postal code of the attendee."
              },
              "locality": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Locality of the attendee."
              },
              "state": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "State of the attendee."
              },
              "country": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Country of the attendee."
              }
            },
            "required": [
              "uid",
              "vat_number",
              "name",
              "title",
              "firstname",
              "lastname",
              "email",
              "cpy_name",
              "inv_to",
              "street",
              "postal_code",
              "locality",
              "state",
              "country"
            ]
          },
          "invoicing_address": {
            "type": "object",
            "properties": {
              "cpy_name": {
                "type": "string",
                "description": "Company name."
              },
              "street": {
                "type": "string",
                "description": "Company street name and number."
              },
              "postal_code": {
                "type": "string",
                "description": "Company postal code."
              },
              "locality": {
                "type": "string",
                "description": "Company locality."
              },
              "state": {
                "type": "string",
                "description": "Company state."
              },
              "country": {
                "type": "string",
                "description": "Company Country."
              }
            },
            "required": [
              "cpy_name",
              "street",
              "postal_code",
              "locality",
              "state",
              "country"
            ]
          },
          "pdf_url": {
            "type": "string",
            "description": "URL of the document PDF file."
          }
        },
        "required": [
          "id",
          "prefix",
          "number",
          "full_number",
          "type",
          "amount_tax_incl",
          "amount_tax_excl",
          "amount_tax",
          "tax_rate",
          "tax_text",
          "is_valid_vat",
          "tax_error",
          "date",
          "due_date",
          "event_name",
          "event_uid",
          "reference",
          "cost_code",
          "payment_status",
          "payment_method",
          "payment_date",
          "payment_amount",
          "payment_reference",
          "cancels_invoice",
          "line_items",
          "attendee",
          "invoicing_address",
          "pdf_url"
        ],
        "title": "Invoice"
      },
      "InvoiceLineItem": {
        "type": "object",
        "properties": {
          "item_type": {
            "type": "string",
            "description": "Type of item. (`category`, `option`, `coupon`, `bulk_reduction` or `admin_fee`)"
          },
          "description": {
            "type": "string",
            "description": "Description of the item."
          },
          "sku": {
            "type": "string",
            "description": "SKU of the item."
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity of the item."
          },
          "amount_tax_incl": {
            "type": "number",
            "description": "Price (taxes included) of the item."
          },
          "amount_tax_excl": {
            "type": "number",
            "description": "Price (taxes excluded) of the item."
          },
          "amount_tax": {
            "type": "number",
            "description": "Amount of taxes for the item."
          },
          "tax_rate": {
            "type": "number",
            "description": "Tax rate of the item."
          },
          "tax_text": {
            "type": "string",
            "description": "Tax rate text of the item."
          },
          "tax_condition": {
            "type": "string",
            "description": "Tax condition details of the item."
          },
          "vat_rule_id": {
            "type": "string",
            "description": "Vat-rule id of the item."
          },
          "condition_id": {
            "type": "string",
            "description": "Vat-rule condition id of the item."
          },
          "id": {
            "type": "integer",
            "description": "item_id"
          },
          "applies_to": {
            "type": [
              "array",
              "null"
            ],
            "description": "discount applies to",
            "items": {}
          }
        },
        "required": [
          "item_type",
          "description",
          "sku",
          "quantity",
          "amount_tax_incl",
          "amount_tax_excl",
          "amount_tax",
          "tax_rate",
          "tax_text",
          "tax_condition",
          "vat_rule_id",
          "condition_id",
          "id",
          "applies_to"
        ],
        "title": "InvoiceLineItem"
      },
      "InvoiceLineItems": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/InvoiceLineItem"
        },
        "title": "InvoiceLineItems"
      },
      "Location": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the location."
          },
          "type": {
            "type": "string",
            "description": "Type of the location."
          },
          "alias": {
            "type": [
              "string",
              "null"
            ],
            "description": "Alias of the location."
          },
          "name": {
            "type": "string",
            "description": "Name of the location."
          },
          "address": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "street": {
                "type": "string"
              },
              "postalCode": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "locality": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "state": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "country": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "latitude": {
                "type": [
                  "number",
                  "null"
                ]
              },
              "longitude": {
                "type": [
                  "number",
                  "null"
                ]
              }
            },
            "required": [
              "street",
              "postalCode",
              "locality",
              "state",
              "country",
              "latitude",
              "longitude"
            ]
          },
          "timezone": {
            "type": "string",
            "description": "Timezone of the location."
          }
        },
        "required": [
          "id",
          "type",
          "alias",
          "name",
          "address",
          "timezone"
        ],
        "title": "Location"
      },
      "MappedGuest": {
        "type": "string",
        "title": "MappedGuest"
      },
      "Option": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the option."
          },
          "sku": {
            "type": [
              "string",
              "null"
            ],
            "description": "SKU of the option."
          },
          "name": {
            "type": "string",
            "description": "Name of the option."
          },
          "full_name": {
            "type": "string",
            "description": "Name of the option with the location and date."
          },
          "description": {
            "type": "string",
            "description": "Description of the option."
          },
          "location": {
            "anyOf": [
              {
                "description": "Location of the option.",
                "$ref": "#/components/schemas/Location"
              },
              {
                "type": "null"
              }
            ]
          },
          "start_date": {
            "type": [
              "string",
              "null"
            ],
            "description": "Start date of the option."
          },
          "end_date": {
            "type": [
              "string",
              "null"
            ],
            "description": "End date of the option."
          },
          "quantity": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Stock quantity of the option."
          },
          "quantity_booked": {
            "type": "integer",
            "description": "Total quantity booked by the guest."
          },
          "early_bird_quantity_booked": {
            "type": "integer",
            "description": "Quantity booked by the guest before the end of the early bird period."
          },
          "total_quantity_booked": {
            "type": "integer",
            "description": "Total booked quantity of the option."
          },
          "sold_out": {
            "type": "boolean",
            "description": "Whether the option is sold-out."
          },
          "price": {
            "type": "number",
            "description": "Price of the option."
          },
          "early_bird_price": {
            "type": "number",
            "description": "Early bird price of the option."
          },
          "early_bird_date": {
            "type": [
              "string",
              "null"
            ],
            "description": "Early bird date of the option."
          },
          "slots": {
            "type": "array",
            "description": "Slots booked by the attendee.",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string"
                }
              },
              "required": [
                "date"
              ]
            }
          },
          "linked_categories": {
            "type": "array",
            "description": "The categories the option belongs to.",
            "items": {
              "type": "integer"
            }
          }
        },
        "required": [
          "id",
          "sku",
          "name",
          "full_name",
          "description",
          "location",
          "start_date",
          "end_date",
          "quantity",
          "total_quantity_booked",
          "sold_out",
          "price",
          "early_bird_price",
          "early_bird_date",
          "linked_categories"
        ],
        "title": "Option"
      },
      "Options": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Option"
        },
        "title": "Options"
      },
      "Profile": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "UID of the profile."
          },
          "uuid": {
            "type": "string",
            "description": "UUID of the profile."
          },
          "id": {
            "type": "string",
            "description": "Same as the UID of the profile. (Required by Zapier)"
          },
          "name": {
            "type": "string",
            "description": "Name of the profile."
          },
          "contact_information": {
            "type": "object",
            "properties": {
              "email": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "phone": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "fax": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "url": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "vat": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "address": {
                "type": "object",
                "properties": {
                  "street": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "street_number": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "street_box": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "postal_code": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "locality": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "state": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "country": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "required": [
                  "street",
                  "street_number",
                  "street_box",
                  "postal_code",
                  "locality",
                  "state",
                  "country"
                ]
              },
              "bank": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string"
                    },
                    "value": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "field",
                    "value"
                  ]
                }
              }
            },
            "required": [
              "email",
              "phone",
              "fax",
              "url",
              "vat",
              "address",
              "bank"
            ]
          },
          "use_invoicing_information": {
            "type": "boolean",
            "description": "Whether the invoices use the contact or invoicing information."
          },
          "is_demo_profile": {
            "type": "boolean"
          },
          "invoicing_information": {
            "type": "object",
            "properties": {
              "email": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "phone": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "fax": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "url": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "vat": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "address": {
                "type": "object",
                "properties": {
                  "street": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "street_number": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "street_box": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "postal_code": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "locality": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "state": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "country": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "required": [
                  "street",
                  "street_number",
                  "street_box",
                  "postal_code",
                  "locality",
                  "state",
                  "country"
                ]
              },
              "bank": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string"
                    },
                    "value": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "field",
                    "value"
                  ]
                }
              }
            },
            "required": [
              "email",
              "phone",
              "fax",
              "url",
              "vat",
              "address",
              "bank"
            ]
          }
        },
        "required": [
          "uid",
          "uuid",
          "id",
          "name",
          "contact_information",
          "use_invoicing_information",
          "is_demo_profile",
          "invoicing_information"
        ],
        "title": "Profile"
      },
      "Subfield": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the subfield."
          },
          "type": {
            "type": "string",
            "description": "Type of the subfield."
          },
          "label": {
            "type": "string",
            "description": "Label of the subfield."
          },
          "placeholder": {
            "type": [
              "string",
              "null"
            ],
            "description": "Placeholder of the subfield."
          },
          "is_mandatory": {
            "type": "boolean",
            "description": "Whether the subfield is mandatory."
          }
        },
        "required": [
          "name",
          "type",
          "label",
          "is_mandatory"
        ],
        "title": "Subfield"
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the transaction."
          },
          "sequence": {
            "type": "integer",
            "description": "Sequence order of the transaction."
          },
          "type": {
            "type": "string",
            "description": "Type of the transaction."
          },
          "amount": {
            "type": "number",
            "description": "Amount of the transaction."
          },
          "currency": {
            "type": "string",
            "description": "Currency of the transaction."
          },
          "method": {
            "type": "string",
            "description": "Method of the transaction."
          },
          "processed_by": {
            "type": "string",
            "description": "Transaction processed by."
          },
          "notes": {
            "type": "string",
            "description": "Transaction notes."
          },
          "payment_reference": {
            "type": "string",
            "description": "Transaction payment reference. Only for online payments"
          },
          "date": {
            "type": "string",
            "description": "Transaction date"
          },
          "documents": {
            "type": "array",
            "description": "Transaction documents.",
            "items": {
              "$ref": "#/components/schemas/DocumentTransactions"
            }
          }
        },
        "required": [
          "id",
          "sequence",
          "type",
          "amount",
          "currency",
          "method",
          "processed_by",
          "notes",
          "payment_reference",
          "date",
          "documents"
        ],
        "title": "Transaction"
      },
      "Transactions": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Transaction"
        },
        "title": "Transactions"
      },
      "Webhook": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the webhook."
          },
          "subscription_url": {
            "type": "string",
            "description": "URL of the webhook."
          },
          "event": {
            "type": "string",
            "description": "Event used to trigger the webhook."
          },
          "method": {
            "type": "string",
            "description": "Method used when sending webhook the webhook."
          },
          "headers": {
            "type": [
              "object",
              "null"
            ],
            "description": "Object with key/value pairs containing the header parameters sent with the webhook.",
            "additionalProperties": {
              "type": "string"
            }
          },
          "allowed_events": {
            "type": [
              "string",
              "null"
            ],
            "description": "Comma-separated list of event UIDs for which this webhook is available."
          },
          "action_name": {
            "type": [
              "string",
              "null"
            ],
            "description": "Name of the menu entry added to the related \"More actions\" menu in the administration interface."
          }
        },
        "required": [
          "id",
          "subscription_url",
          "event",
          "method",
          "headers",
          "allowed_events",
          "action_name"
        ],
        "title": "Webhook"
      },
      "ZapGuest": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "minItems": 0,
        "maxItems": 0,
        "additionalItems": false,
        "title": "ZapGuest"
      }
    },
    "responses": {
      "ValidationException": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Errors overview."
                },
                "errors": {
                  "type": "object",
                  "description": "A detailed description of each field that failed validation.",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "message",
                "errors"
              ]
            }
          }
        }
      },
      "ModelNotFoundException": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error overview."
                }
              },
              "required": [
                "message"
              ]
            }
          }
        }
      }
    }
  }
}